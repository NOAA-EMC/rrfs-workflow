#!/bin/bash

#-----------------------------------------------------------------------
# RRFS Forecast
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Source the variable definitions file and the bash utility functions.
#-----------------------------------------------------------------------

. ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/source_util_funcs.sh

date
export PS4='+ $SECONDS + '

#-----------------------------------------------------------------------
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#-----------------------------------------------------------------------

{ save_shell_opts; set -u -x; } > /dev/null 2>&1

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs a forecast with FV3 for 
the specified cycle.
========================================================================"

#-----------------------------------------------------------------------
# Obtain unique process id (pid) and create the run directory (DATA).
# Create the INPUT and RESTART directories under the run directory.
#-----------------------------------------------------------------------

export pid=${pid:-$$}
export envir=${envir:-prod}
export RUN=${RUN:-rrfs}

export mem_num=m0$(echo "${ENSMEM_INDX}" | awk '{print $1+0}')

CYCLE_TYPE=${CYCLE_TYPE:-prod}
CYCLE_SUBTYPE=${CYCLE_SUBTYPE:-empty}
if [ ${CYCLE_TYPE} == "spinup" ]; then
  export jobid=${RUN}_forecast_spinup_${envir}_${cyc}
  if  [ ${CYCLE_SUBTYPE} == "ensinit" ]; then
    export jobid=${RUN}_forecast_ensinit_${envir}_${cyc}
  fi
else
  if [ "${DO_ENSEMBLE}" = "TRUE" ]; then
    export jobid=${RUN}_forecast_${mem_num}_${envir}_${cyc}
  else
    export jobid=${RUN}_forecast_${envir}_${cyc}
  fi
fi

export DATA=${DATAROOT}/${jobid}
mkdir -p ${DATA}

mkdir -p ${DATA}/INPUT
mkdir -p ${DATA}/RESTART

export gridspec_dir=${GESROOT}/grid_spec
mkdir -p ${gridspec_dir}

cd ${DATA}

export pgmout="${DATA}/OUTPUT.$$"
env

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

$SCRIPTSdir/exrrfs_run_fcst.sh \
  cdate="${CDATE}" \
  cycle_type="${CYCLE_TYPE}" \
  cycle_subtype="${CYCLE_SUBTYPE}" \
  ensmem_indx="${ENSMEM_INDX}"
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

if [ "${KEEPDATA}" = "NO" ]; then
  rm -rf ${DATA}
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"

#-----------------------------------------------------------------------
# Restore the shell options saved at the beginning of this script/function.
#-----------------------------------------------------------------------

{ restore_shell_opts; } > /dev/null 2>&1

