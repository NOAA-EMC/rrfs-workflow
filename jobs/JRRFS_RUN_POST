#!/bin/bash

#-----------------------------------------------------------------------
# RRFS Post-Processing
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Source the variable definitions file and the bash utility functions.
#-----------------------------------------------------------------------

. ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/source_util_funcs.sh

date
export PS4='+ $SECONDS + '

#-----------------------------------------------------------------------
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#-----------------------------------------------------------------------

{ save_shell_opts; set -u -x; } > /dev/null 2>&1

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs the post-processor (UPP)
on the output files corresponding to a specified forecast hour.
========================================================================"

#-----------------------------------------------------------------------
# Obtain unique process id (pid) and create the run directory (DATA).
#-----------------------------------------------------------------------

export pid=${pid:-$$}
export envir=${envir:-prod}
export RUN=${RUN:-rrfs}

CYCLE_TYPE=${CYCLE_TYPE:-prod}
if [ ${CYCLE_TYPE} == "spinup" ]; then
  export INPUT_DATA="${DATAROOT}/${RUN}_forecast_spinup_${envir}_${cyc}"
  jobid=${RUN}_post_spinup_${envir}_${cyc}_f${fhr}
else
  export INPUT_DATA="${DATAROOT}/${RUN}_forecast_${envir}_${cyc}"
  jobid=${RUN}_post_${envir}_${cyc}_f${fhr}
fi

export DATA=${DATAROOT}/${jobid}
mkdir -p ${DATA}
cd ${DATA}

export pgmout="${DATA}/OUTPUT.$$"

#-----------------------------------------------------------------------
# Define COM directories
#-----------------------------------------------------------------------

export COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/$cyc${SLASH_ENSMEM_SUBDIR}"
if [ ${CYCLE_TYPE} = "spinup" ]; then
  COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/${cyc}_spinup${SLASH_ENSMEM_SUBDIR}"
fi
mkdir -p "${COMOUT}"
env

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

$SCRIPTSdir/exrrfs_run_post.sh \
  cdate="${CDATE}" \
  fhr="${fhr}" \
  tmmark="${TMMARK}" \
  cycle_type="${CYCLE_TYPE}" \
  ensmem_indx="${ENSMEM_INDX}"
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

if [ "${KEEPDATA}" = "NO" ]; then
  rm -rf ${DATA}
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"

#-----------------------------------------------------------------------
# Restore the shell options saved at the beginning of this script/function.
#-----------------------------------------------------------------------

{ restore_shell_opts; } > /dev/null 2>&1

