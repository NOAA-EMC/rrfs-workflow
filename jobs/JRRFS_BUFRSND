#!/bin/bash

date
export PS4='+ $SECONDS + ' 
set -xue

#-----------------------------------------------------------------------
# Specify Package Location
#-----------------------------------------------------------------------
export NET='rrfs'
export MACHINE="WCOSS2"
export WORKFLOW_MANAGER="ecflow"
export HOMErrfs=${HOMErrfs:-""}
export EXECrrfs=${EXECrrfs:-${HOMErrfs}/exec}
export FIXrrfs=${FIXrrfs:-${HOMErrfs}/fix}
export PARMrrfs=${PARMrrfs:-${HOMErrfs}/parm}
export USHrrfs=${USHrrfs:-${HOMErrfs}/ush}
export FIX_BUFRSND="${FIXrrfs}/bufrsnd"
export GEMPAK_FIX=${GEMPAK_FIX:-${FIXrrfs}/gempak/fix}

#-----------------------------------------------------------------------
# RRFS Bufr Sounding
#-----------------------------------------------------------------------
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
case "${WGF}" in
  "det")
    export RUN="rrfs"
    ;;
  "enkf")
    export RUN="enkfrrfs"
    ;;
  "ensf")
    export RUN="refs"
    ;;
  "firewx")
    export RUN="firewx"
    ;;
esac
export fhr=01
export tmmark=tm00

export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p ${DATA}
cd ${DATA}

#-----------------------------------------------------------------------
# Source the bash utility functions.
#-----------------------------------------------------------------------

. $USHrrfs/source_util_funcs.sh

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs the bufr sounding
on the output files corresponding to a specified forecast hour.
========================================================================"

#-----------------------------------------------------------------------
# Define the umbrella data and COM directories
#-----------------------------------------------------------------------

if [ $WGF = "ensf" ]; then
  export ENSMEM_INDX=${MEMBER_NAME}
  export FHRLIM=60
  DO_ENSFCST="TRUE"
elif [ $WGF = "det" ]; then
  export ENSMEM_INDX=""
  export FHRLIM=84
fi
export mem_num=m$(echo "${ENSMEM_INDX}")

CYCLE_TYPE=${CYCLE_TYPE:-prod}
export DO_ENSFCST=${DO_ENSFCST:-"FALSE"}
export COMOUT=${COMOUT:-$(compath.py -o rrfs/${rrfs_ver}/${RUN}.${PDY}/${cyc})}
export umbrella_forecast_data="${DATAROOT}/rrfs_forecast_${cyc}_${rrfs_ver}/${WGF}"

if [ "${DO_ENSFCST}" = "TRUE" ]; then
  export COMOUT=${COMOUT}/${mem_num}
  export umbrella_forecast_data=${DATAROOT}/rrfs_forecast_${cyc}_${rrfs_ver}/${WGF}/${mem_num}
fi

# Location of dyn/phy files from forecast task
export shared_forecast_output_data=${umbrella_forecast_data}/output

mkdir -p "${COMOUT}"

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

export pgmout="${DATA}/OUTPUT.$$"
env

$HOMErrfs/scripts/exrrfs_bufrsnd.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
