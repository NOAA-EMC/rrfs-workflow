#!/bin/bash

# 
#-----------------------------------------------------------------------
#
# This script generates the lateral boundary conditions (LBCs) for the RRFS.
#
# Note that when we refer to LBCs, we are referring to the LBCs excluding the one 
# at the 0-th hour.
# 
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/source_util_funcs.sh

date
export PS4='+ $SECONDS + '
#
#-----------------------------------------------------------------------
#
# Source the file defining the function that will be used to set various
# external-model-associated variables.
#
#-----------------------------------------------------------------------
#
. $USHdir/get_extrn_mdl_file_dir_info.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that generates lateral boundary 
condition (LBC) files (in NetCDF format) for all LBC update hours (except 
hour zero). 
========================================================================"
#
#-----------------------------------------------------------------------
#
# Check whether output files from the specified external model
# (EXTRN_MDL_NAME) are available on the specified cycle date and time
# (CDATE).
#
#-----------------------------------------------------------------------
#
case ${EXTRN_MDL_NAME} in

"GSMGFS")
# The transition date from the GSMGFS to the FV3GFS was 2019061212, i.e.
# this was the first official forecast with the FV3GFS. So we set the
# last CDATE for the GSMGFS to the one 6 hours before this.
  cdate_max="2019061206"
  if [ "$CDATE" -gt "$cdate_max" ]; then
    err_exit "\
Output from the specified external model (EXTRN_MDL_NAME) is not available
for the specified cycle date and time (CDATE) because the latter is
later than the last forecast date and time (cdate_max) with this model:
  EXTRN_MDL_NAME = \"${EXTRN_MDL_NAME}\"
  cdate_max = \"${cdate_max}\"
  CDATE = \"${CDATE}\""
  fi
  ;;

"FV3GFS")
# The transition date from the GSMGFS to the FV3GFS was 2019061212, i.e.
# this was the first official forecast with the FV3GFS. However, parallel
# runs with the FV3GFS go back to 2018121500. So we set the first CDATE
# for the FV3GFS to this date and time.
  CDATE_min="2018121500"
  if [ "$CDATE" -lt "$CDATE_min" ]; then
    err_exit "\
Output from the specified external model (EXTRN_MDL_NAME) is not available
for the specified cycle date and time (CDATE) because the latter is
earlier than the implementation date of this model:
  EXTRN_MDL_NAME = \"${EXTRN_MDL_NAME}\"
  CDATE_min = \"${CDATE_min}\"
  CDATE = \"${CDATE}\""
  fi
  ;;

"RAP")
# Examination of the HPSS archives shows that the RAP data goes back to
# July 01, 2015.
  CDATE_min="2015070100"
  if [ "$CDATE" -lt "$CDATE_min" ]; then
    err_exit "\
Output from the specified external model (EXTRN_MDL_NAME) is not available
for the specified cycle date and time (CDATE) because the latter is
earlier than the implementation date of this model:
  EXTRN_MDL_NAME = \"${EXTRN_MDL_NAME}\"
  CDATE_min = \"${CDATE_min}\"
  CDATE = \"${CDATE}\""
  fi
  ;;

"HRRR")
# From the HRRR home page (https://rapidrefresh.noaa.gov/hrrr), the
# implementation of the first version of the operational HRRR was
# September 30, 2014.
  CDATE_min="2014103000"
  if [ "$CDATE" -lt "$CDATE_min" ]; then
    err_exit "\
Output from the specified external model (EXTRN_MDL_NAME) is not available
for the specified cycle date and time (CDATE) because the latter is
earlier than the implementation date of this model:
  EXTRN_MDL_NAME = \"${EXTRN_MDL_NAME}\"
  CDATE_min = \"${CDATE_min}\"
  CDATE = \"${CDATE}\""
  fi
  ;;

esac
#
#-----------------------------------------------------------------------
#
# Set the parameter anl_or_fcst that determines whether we want to get
# analysis or forecast files.  This depends on whether we want these files
# to generate initial condition and surface field files or lateral boundary
# condition files.  Also, set time_offset_hrs, which is the offset in
# hours between the current cycle's starting time and the starting time
# of the external model providing the LBCs.
#
#-----------------------------------------------------------------------
#
anl_or_fcst="FCST"
time_offset_hrs="${EXTRN_MDL_LBCS_OFFSET_HRS}"
lbs_spec_intvl_hrs="${LBC_SPEC_INTVL_HRS}"
boundary_len_hrs="${BOUNDARY_LEN}"
if [ "${DO_RETRO}" = "TRUE" ]; then
  retro_or_realtime="RETRO"
else
  retro_or_realtime="REALTIME"
fi
#
#-----------------------------------------------------------------------
#
# Set the name of and create the directory in which the output from this
# script will be placed (if it doesn't already exist).
#
#-----------------------------------------------------------------------
#
export lbcs_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/lbcs"
mkdir -p "${lbcs_dir}"
#
#-----------------------------------------------------------------------
#
# Set the name of and create the directory in which the output from this
# script will be saved for a long time (if it doesn't already exist).
# Usually lbcs_dir under tmpnwprd should be purged fairly soon after cycle done
#
#-----------------------------------------------------------------------
#
export lbcs_nwges_dir="${NWGES_DIR}${SLASH_ENSMEM_SUBDIR}/lbcs"
mkdir -p "${lbcs_nwges_dir}"

export workdir="${lbcs_dir}/tmp_LBCS_${bcgrp}"
mkdir -p "$workdir"
cd $workdir
#
#-----------------------------------------------------------------------
#
# Call the function that sets various external-model-associated variables.
# See the function defintion file for the definitions of these variables.
#
#-----------------------------------------------------------------------
#
get_extrn_mdl_file_dir_info \
  extrn_mdl_name="${EXTRN_MDL_NAME}" \
  anl_or_fcst="${anl_or_fcst}" \
  retro_or_realtime="${retro_or_realtime}" \
  cdate_FV3LAM="${CDATE}" \
  lbs_spec_intvl_hrs="${lbs_spec_intvl_hrs}" \
  boundary_len_hrs="${boundary_len_hrs}"\
  time_offset_hrs="${time_offset_hrs}" \
  extrn_mdl_date_julian="${EXTRN_MDL_DATE_JULIAN}" \
  varname_extrn_mdl_memhead="${GEFS_INPUT_SUBDIR}" \
  varname_extrn_mdl_cdate="extrn_mdl_cdate" \
  varname_extrn_mdl_lbc_spec_fhrs="extrn_mdl_lbc_spec_fhrs" \
  varname_extrn_mdl_fns_on_disk="extrn_mdl_fns_on_disk" \
  varname_extrn_mdl_fns_on_disk2="extrn_mdl_fns_on_disk2" \
  varname_extrn_mdl_sysdir="extrn_mdl_sysdir" \
  varname_extrn_mdl_sysdir2="extrn_mdl_sysdir2"
export err=$?; err_chk
#
#-----------------------------------------------------------------------
#
# Set the directory in which to check for the external model files (which
# we refer to here as the "source" directory) to the default one set above
# for the current machine and external model.
#
#-----------------------------------------------------------------------
#
extrn_mdl_source_dir="${extrn_mdl_sysdir}"
extrn_mdl_source_dir2="${extrn_mdl_sysdir2}"
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job.
#
#-----------------------------------------------------------------------
#
extrn_mdl_lbc_spec_fhrs_str="( "$( printf "\"%s\" " "${extrn_mdl_lbc_spec_fhrs[@]}" )")"
extrn_mdl_fns_on_disk_str="( "$( printf "\"%s\" " "${extrn_mdl_fns_on_disk[@]}" )")"
extrn_mdl_fns_on_disk_str2="( "$( printf "\"%s\" " "${extrn_mdl_fns_on_disk2[@]}" )")"

export pgmout="${workdir}/OUTPUT.$$"
env

$SCRIPTSdir/exrrfs_make_lbcs.sh \
  use_user_staged_extrn_files="${USE_USER_STAGED_EXTRN_FILES}" \
  extrn_mdl_name="${extrn_mdl_name}" \
  extrn_mdl_cdate="${extrn_mdl_cdate}" \
  extrn_mdl_lbc_spec_fhrs="${extrn_mdl_lbc_spec_fhrs_str}" \
  extrn_mdl_fns_on_disk="${extrn_mdl_fns_on_disk_str}" \
  extrn_mdl_fns_on_disk2="${extrn_mdl_fns_on_disk_str2}" \
  extrn_mdl_source_dir="${extrn_mdl_source_dir}" \
  extrn_mdl_source_dir2="${extrn_mdl_source_dir2}" \
  extrn_mdl_staging_dir="${workdir}" \
  bcgrp="${bcgrp}" \
  bcgrpnum="${bcgrpnum}"
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/function.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

