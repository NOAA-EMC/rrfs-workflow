#!/usr/bin/env bash
declare -rx PS4='+ $(basename ${BASH_SOURCE[0]:-${FUNCNAME[0]:-"Unknown"}})[${LINENO}]${id}: '
set -x
date
#
# source the config cascade
source ${EXPDIR}/exp.setup
source ${EXPDIR}/config/config.${MACHINE}
source ${EXPDIR}/config/config.base
[[ -s ${EXPDIR}/config/config.ioda_bufr ]] && source ${EXPDIR}/config/config.ioda_bufr
#
export pid=${pid:-$$}
export RUN=${RUN:-rrfs}
export jobid=${jobid:-${RUN}_ioda_bufr_${cyc}}

export DATA=${DATA:-${DATAROOT}/${jobid}}
if [ -d ${DATA} ]; then #remove the ${DATA} directory before a new run
  rm -rf ${DATA}
fi
mkdir -p ${DATA}
#
export COMOUT=${COMOUT:-$(compath.py -o ${NET}/${rrfs_ver}/${RUN}.${PDY}/${cyc})}
mkdir -p ${COMOUT}/ioda_bufr
#
#----------------------------------------
# Execute the script.
#----------------------------------------
export pgmout="${DATA}/OUTPUT.$$"
${HOMErrfs}/scripts/exrrfs_ioda_bufr.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi
#
#----------------------------------------
# Remove the Temporary working directory
#----------------------------------------
cd ${DATAROOT}
KEEPDATA_ioda_bufr=${KEEPDATA_ioda_bufr:-${KEEPDATA}}
[[ "${KEEPDATA_ioda_bufr}" == "NO" ]] && rm -rf ${DATA}
#
date
echo "JOB ${jobid:-} HAS COMPLETED NORMALLY!"
exit 0
