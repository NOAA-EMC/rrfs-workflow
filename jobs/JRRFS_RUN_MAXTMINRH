#!/bin/bash

##########################################################
# This job...
# 
########################################################

date
export PS4=' $SECONDS + ' 

if [ ${cyc} != "07" ] ; then
    echo -e "\nNOTICE: MAXTMINRH only runs at 07z. Exiting.\n"
    exit 0
fi
#
## Note: grib_util module loaded in submission (lsf or ecFlow) script
#
###########################################################
## obtain unique process id (pid) and make temp directories
#
#
#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------


. ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/source_util_funcs.sh

################Set previous day cycle index##################
export PDYm1=`$NDATE -24 ${PDY}${cyc} | cut -c 1-8`
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------



{ save_shell_opts; set -u -x; } > /dev/null 2>&1


#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs a analysis with FV3 for
the specified cycle.
========================================================================"

#
#-----------------------------------------------------------------------
#
# Create the working directory under the cycle directory.
#
#-----------------------------------------------------------------------
# CYCLE_TYPE is to indicate which type of cycle this job for:
#   spinup: this job is for spin-up cycles
#   others(prod): this job is for product cycle
#
CYCLE_TYPE=${CYCLE_TYPE:-prod}
if [ ${CYCLE_TYPE} == "spinup" ]; then
  run_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/fcst_fv3lam_spinup"
else
  run_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/fcst_fv3lam"
fi

#
#-----------------------------------------------------------------------
#
# create COMOUT directory
#
#-----------------------------------------------------------------------
COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/$cyc${SLASH_ENSMEM_SUBDIR}"
if [ ${CYCLE_TYPE} == "spinup" ]; then
  COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/${cyc}_spinup${SLASH_ENSMEM_SUBDIR}"
fi
mkdir -p "${COMOUT}"
#
#-----------------------------------------------------------------------
#
# Check for post directory
#
#-----------------------------------------------------------------------
postprd_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/postprd"
if [ ${CYCLE_TYPE} == "spinup" ]; then
  postprd_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/postprd_spinup"
fi
mkdir -p "${postprd_dir}"

fhr_dir="${postprd_dir}/$fhr"
check_for_preexist_dir_file "${fhr_dir}" "delete"
mkdir -p "${fhr_dir}"
######################
## Execute the scripts.
#######################
#
######################
## Compute Max T
#######################
#
$SCRIPTSdir/exrrfs_run_maxtbg.ksh \
  cdate="${CDATE}" \
  run_dir="${run_dir}" \
  postprd_dir="${postprd_dir}" \
  comout="${COMOUT}" \
  fhr_dir="${fhr_dir}" \
  fhr="${fhr}" \
  tmmark="${TMMARK}" || \
print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
######################
## Compute Min RH
#######################
#
$SCRIPTSdir/exrrfs_run_minrh.ksh \
  cdate="${CDATE}" \
  run_dir="${run_dir}" \
  postprd_dir="${postprd_dir}" \
  comout="${COMOUT}" \
  fhr_dir="${fhr_dir}" \
  fhr="${fhr}" \
  tmmark="${TMMARK}" || \
print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

