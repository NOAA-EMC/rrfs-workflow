#!/bin/bash

date
export PS4='+ $SECONDS + ' 
set -xue

#-----------------------------------------------------------------------
# Specify Package Location
#-----------------------------------------------------------------------
export NET='rrfs'
export MACHINE="WCOSS2"
export WORKFLOW_MANAGER="ecflow"
export HOMErrfs=${HOMErrfs:-""}
export EXECrrfs=${EXECrrfs:-${HOMErrfs}/exec}
export FIXrrfs=${FIXrrfs:-${HOMErrfs}/fix}
export PARMrrfs=${PARMrrfs:-${HOMErrfs}/parm}
export USHrrfs=${USHrrfs:-${HOMErrfs}/ush}
export FIX_GSI="${FIXrrfs}/gsi"

#-----------------------------------------------------------------------
# RRFS Save Restart
#-----------------------------------------------------------------------
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
case "${WGF}" in
  "det")
    export RUN="rrfs"
    ;;
  "enkf")
    export RUN="enkfrrfs"
    ;;
  "ensf")
    export RUN="refs"
    ;;
  "firewx")
    export RUN="firewx"
    ;;
esac
if [ $WGF = "enkf" ] || [ $WGF = "ensf" ]; then
  export ENSMEM_INDX=${MEMBER_NAME}
  export mem_num=m$(echo "${ENSMEM_INDX}")
  export DO_ENSEMBLE="TRUE"
else
  export ENSMEM_INDX=""
  export mem_num=""
  export DO_ENSEMBLE="FALSE"
fi

#-----------------------------------------------------------------------
# Define the umbrella data directories.
# Create the INPUT and RESTART directories under the run directory.
#-----------------------------------------------------------------------
export CYCLE_TYPE=${CYCLE_TYPE:-prod}
export CYCLE_SUBTYPE=${CYCLE_SUBTYPE:-empty}
export COMrrfs=${COMrrfs:-$(compath.py -o rrfs/${rrfs_ver})}
export SURFACE_DIR=${SURFACE_DIR:-${COMrrfs}/surface}
export umbrella_forecast_data=${DATAROOT}/rrfs_forecast_${cyc}_${rrfs_ver}/${WGF}

if [ ${CYCLE_TYPE} = "spinup" ]; then
  export umbrella_forecast_data=${DATAROOT}/rrfs_forecast_spinup_${cyc}_${rrfs_ver}/${WGF}
  if [ "${DO_ENSEMBLE}" = "TRUE" ]; then
    export umbrella_forecast_data=${DATAROOT}/rrfs_forecast_spinup_${cyc}_${rrfs_ver}/${WGF}/${mem_num}
  fi
else
  if [ "${DO_ENSEMBLE}" = "TRUE" ]; then
    export umbrella_forecast_data=${DATAROOT}/rrfs_forecast_${cyc}_${rrfs_ver}/${WGF}/${mem_num}
  fi
fi

export shared_forecast_output_data=${umbrella_forecast_data}/output
export shared_forecast_restart_data=${umbrella_forecast_data}/RESTART

export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p ${DATA} ${SURFACE_DIR}
cd ${DATA}

#-----------------------------------------------------------------------
# Set PDY, define and create the COM directories.
#-----------------------------------------------------------------------
export cycle="t${cyc}z"
setpdy.sh
. ./PDY
export CDATE="${PDY}${cyc}"

export COMOUT=${COMOUT:-$(compath.py -o rrfs/${rrfs_ver}/${RUN}.${PDY}/${cyc})}

if [ ${CYCLE_TYPE} = "spinup" ]; then
  export COMOUT=${COMrrfs}/rrfs.${PDY}/${cyc}_spinup
  if [ "${DO_ENSEMBLE}" = "TRUE" ]; then
    export COMOUT=${COMrrfs}/enkfrrfs.${PDY}/${cyc}_spinup/${mem_num}
  fi
else
  if [ "${DO_ENSEMBLE}" = "TRUE" ]; then
    export COMOUT=${COMrrfs}/enkfrrfs.${PDY}/${cyc}/${mem_num}
  fi
fi

export COMOUT=${COMOUT}/forecast
mkdir -p ${COMOUT}/RESTART ${COMOUT}/INPUT

#-----------------------------------------------------------------------
# Source the bash utility functions.
#-----------------------------------------------------------------------

. $USHrrfs/source_util_funcs.sh

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that saves restart files to COM.
========================================================================"
SLASH_ENSMEM_SUBDIR=${SLASH_ENSMEM_SUBDIR:-""}
len_ensmem=${#SLASH_ENSMEM_SUBDIR} 
if [ ${len_ensmem} -eq 0 ] && [ ! "${DO_ENSEMBLE}" = "TRUE" ]; then
  export CYCLE_SUBTYPE="control"
fi

#-----------------------------------------------------------------------
# Make sure that fhr is a non-empty string consisting of only digits.  
#-----------------------------------------------------------------------
fhr=${FHR:-0}
export fhr=$( printf "%s" "${fhr}" | sed -n -r -e "s/^([0-9]+)$/\1/p" )
if [ -z "$fhr" ]; then
  err_exit "\
The forecast hour (fhr) must be a non-empty string consisting of only 
digits:
  fhr = \"${fhr}\""
fi

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

export pgmout="${DATA}/OUTPUT.$$"
env

${HOMErrfs}/scripts/exrrfs_save_restart.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
