#!/bin/bash

date
export PS4='+ $SECONDS + ' 
set -xue

#-----------------------------------------------------------------------
# Specify Package Location
#-----------------------------------------------------------------------
export NET='rrfs'
export MACHINE="WCOSS2"
export WORKFLOW_MANAGER="ecflow"
export HOMErrfs=${HOMErrfs:-""}
export EXECrrfs=${EXECrrfs:-${HOMErrfs}/exec}
export FIXrrfs=${FIXrrfs:-${HOMErrfs}/fix}
export PARMrrfs=${PARMrrfs:-${HOMErrfs}/parm}
export USHrrfs=${USHrrfs:-${HOMErrfs}/ush}
export SORCrrfs=${SORCrrfs:-${HOMErrfs}/sorc}
export FIXam=${FIXam:-${HOMErrfs}/fix/am}
export FIXLAM=${FIXLAM:-${HOMErrfs}/fix/lam/RRFS_NA_3km}
export FIXgsm=${FIXgsm:-${HOMErrfs}/fix/am}
export FIX_GSI="${FIXrrfs}/gsi"
export FIX_UPP="${FIXrrfs}/upp"
export FIXprdgen="${FIXrrfs}/prdgen"
export FIX_SMOKE_DUST="${FIXrrfs}/smoke_dust"
export GRID_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export OROG_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export SFC_CLIMO_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export DIAG_TABLE_TMPL_FP="${PARMrrfs}/diag_table.RRFS_sas_clm"
export MODEL_CONFIG_TMPL_FP="${PARMrrfs}/model_configure"
export UFS_CONFIG_TMPL_FP="${PARMrrfs}/ufs.configure"
export CCPP_PHYS_SUITE_FP="${PARMrrfs}/config/${WGF}/suite_RRFS_sas.xml"
export FV3_NML_FN="input.nml"
export FV3_EXEC_FP="${EXECrrfs}/ufs_model"
export THOMPSON_MP_CLIMO_FP="${FIXam}/Thompson_MP_MONTHLY_CLIMO.nc"
export GRID_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export OROG_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export SFC_CLIMO_DIR="${HOMErrfs}/fix/lam/RRFS_NA_3km"
export OBSPATH_NSSLMOSIAC="${DCOMROOT}/ldmdata/obs/upperair/mrms/conus/MergedReflectivityQC"
export GLMFED_EAST_ROOT="${DCOMROOT}/ldmdata/obs/GOES-16/GLM/tiles"
export GLMFED_WEST_ROOT="${DCOMROOT}/ldmdata/obs/GOES-17/GLM/tiles"
export GVF_ROOT="${DCOMROOT}/viirs"
export FIRE_RAVE_DIR="${DCOMROOT}"
export TOPO_DIR="${FIXrrfs}/fix_orog"
export SFC_CLIMO_INPUT_DIR="${FIXrrfs}/fix_sfc_climo"
export AIRCRAFT_REJECT="${FIXrrfs}/gsi"
export SFCOBS_USELIST="${FIXrrfs}/gsi"
export CUSTOM_POST_CONFIG_FP="${FIXrrfs}/upp/postxconfig-NT-rrfs.txt"
export CUSTOM_POST_PARAMS_FP="${FIXrrfs}/upp/params_grib2_tbl_new"
export DATA_TABLE_FP="${PARMrrfs}/config/${WGF}/data_table"
export FIELD_TABLE_FP="${PARMrrfs}/config/${WGF}/field_table"
export FV3_NML_FP="${PARMrrfs}/config/${WGF}/input.nml"
export UFS_YAML_FP="${PARMrrfs}/config/${WGF}/fd_ufs.yaml"
export FV3_NML_RESTART_FP="${PARMrrfs}/config/${WGF}/input.nml_restart"
if [ $WGF == "ensf" ]; then
  export CUSTOM_POST_CONFIG_FP="${FIXrrfs}/upp/postxconfig-NT-refs.txt"
fi
if [ $WGF == "firewx" ]; then
  export DIAG_TABLE_TMPL_FP="${PARMrrfs}/diag_table.RRFS_sas_nogwd"
  export CCPP_PHYS_SUITE_FP="${PARMrrfs}/config/${WGF}/suite_RRFS_sas_nogwd.xml"
  export CCPP_PHYS_SUITE='RRFS_sas_nogwd'
  export CUSTOM_POST_CONFIG_FP="${FIXrrfs}/upp/postxconfig-NT-firewx.txt"
fi

#-----------------------------------------------------------------------
# RRFS Save DA Output
#-----------------------------------------------------------------------
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p ${DATA}
cd ${DATA}

#-----------------------------------------------------------------------
# Source the bash utility functions.
#-----------------------------------------------------------------------

. $USHrrfs/source_util_funcs.sh

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that saves DA analysis files to nwges.
========================================================================"

#-----------------------------------------------------------------------
# Obtain unique process id (pid) and set the run directory (DATA).
#-----------------------------------------------------------------------

export pid=${pid:-$$}
case "${WGF}" in
  "det")
    export RUN="rrfs"
    ;;
  "enkf")
    export RUN="enkfrrfs"
    ;;
  "ensf")
    export RUN="refs"
    ;;
  "firewx")
    export RUN="firewx"
    ;;
esac
if [ $WGF = "enkf" ] || [ $WGF = "ensf" ]; then
  export ENSMEM_INDX=${MEMBER_NAME}
else
  export ENSMEM_INDX=""
fi
export mem_num=m$(echo "${ENSMEM_INDX}")

export COMrrfs=${COMrrfs:-$(compath.py -o ${NET}/${rrfs_ver})}
export COMOUT=${COMOUT:-${COMrrfs}/${RUN}.${PDY}/${cyc}}
  
if [ ${WGF} == "ensf" ]; then
  export jobid=${RUN}_forecast_${mem_num}_${envir}_${cyc}
  export COMOUT="${COMrrfs}/${RUN}.${PDY}/${cyc}/${mem_num}/forecast_enfcst"
else
  export COMOUT="${COMrrfs}/${RUN}.${PDY}/${cyc}/${mem_num}/forecast"
fi
export umbrella_forecast_data="${DATAROOT}/rrfs_forecast_${cyc}_${rrfs_ver}/${WGF}/${mem_num}/INPUT"
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p ${COMOUT}/DA_OUTPUT

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

export pgmout="OUTPUT.$$"
env

${HOMErrfs}/scripts/exrrfs_save_da_output.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
