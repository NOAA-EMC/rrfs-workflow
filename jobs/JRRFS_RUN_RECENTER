#!/bin/bash

#
#-----------------------------------------------------------------------
#
# This J-JOB script stages initial and boundary conditions for
#      the analysis and model of the cycle it is running. The initial
#      could come from external model or previous cycles forecast.
#      The boundary could come from previous many cycles.
#
#-----------------------------------------------------------------------

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. ${GLOBAL_VAR_DEFNS_FP}
. $USHdir/source_util_funcs.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs a analysis with FV3 for 
the specified cycle.
========================================================================"
#
#-----------------------------------------------------------------------
#
# Create the working directory under the cycle directory.
#
#-----------------------------------------------------------------------
#
# CYCLE_TYPE is to indicate which type of cycle this job for:
#   spinup: this job is for spin-up cycles
#   others(prod): this job is for product cycle
#
CYCLE_TYPE=${CYCLE_TYPE:-prod}
if [ ${CYCLE_TYPE} == "spinup" ]; then
  recenterdir=${CYCLE_DIR}/recenter/fcst_fv3lam_spinup/INPUT
else
  recenterdir=${CYCLE_DIR}/recenter/fcst_fv3lam/INPUT
fi
rm -fr ${recenterdir}
mkdir -p ${recenterdir}
#
#-----------------------------------------------------------------------
#
# create COMOUT directory
#
#-----------------------------------------------------------------------
#
if [ ${CYCLE_TYPE} == "spinup" ]; then
  COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/${cyc}_spinup"
else
  COMOUT="${COMOUT_BASEDIR}/$RUN.$PDY/${cyc}"
fi
mkdir -p "${COMOUT}"
#
#-----------------------------------------------------------------------
#
# Specify the control anaylsis file location
#
#-----------------------------------------------------------------------
if [[ ${DO_ENSFCST} == "TRUE" ]]; then
  ctrlpath=${ENSCTRL_NWGES_DIR}
else
  ctrlpath=${ENSCTRL_CYCLE_DIR}
fi
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job.
#
#-----------------------------------------------------------------------
#
$SCRIPTSdir/exrrfs_run_recenter.sh \
             cycle_type="${CYCLE_TYPE}" \
             comout="${COMOUT}" \
             recenterdir="${recenterdir}" \
             ctrlpath="${ctrlpath}"
export err=$?; err_chk
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/function.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

