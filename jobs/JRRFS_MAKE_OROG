#!/bin/bash

date
export PS4='+ $SECONDS + ' 
set -xue

#-----------------------------------------------------------------------
# Specify Package Location
#-----------------------------------------------------------------------
export NET='rrfs'
export MACHINE="WCOSS2"
export WORKFLOW_MANAGER="ecflow"
export HOMErrfs=${HOMErrfs:-""}
export EXECrrfs=${EXECrrfs:-${HOMErrfs}/exec}
export FIXrrfs=${FIXrrfs:-${HOMErrfs}/fix}
export PARMrrfs=${PARMrrfs:-${HOMErrfs}/parm}
export USHrrfs=${USHrrfs:-${HOMErrfs}/ush}
export TOPO_DIR="${FIXrrfs}/fix_orog"
export FIXam=${FIXam:-${HOMErrfs}/fix/am}
export TOPO_DIR="${FIXrrfs}/fix_orog"

#-----------------------------------------------------------------------
# RRFS Make Orography
#-----------------------------------------------------------------------
export pid=${pid:-$$}
export outid=${outid:-"LL$job"}
case "${WGF}" in
  "det")
    export RUN="rrfs"
    ;;
  "enkf")
    export RUN="enkfrrfs"
    ;;
  "ensf")
    export RUN="refs"
    ;;
  "firewx")
    export RUN="firewx"
    ;;
esac
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p ${DATA}
cd ${DATA}

export cycle="t${cyc}z"
setpdy.sh
. ./PDY
export CDATE="${PDY}${cyc}"

#-----------------------------------------------------------------------
# Source the bash utility functions.
#-----------------------------------------------------------------------

. $USHrrfs/source_util_funcs.sh

#-----------------------------------------------------------------------
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#-----------------------------------------------------------------------

scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )

#-----------------------------------------------------------------------
# Print message indicating entry into script.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that generates orography files.
========================================================================"

#-----------------------------------------------------------------------
# Define COM directories
#-----------------------------------------------------------------------
# Send fix files to COMOUT
export COMOUT="${COMOUT:-$(compath.py -o ${NET}/${rrfs_ver}/${RUN}.${PDY}/${cyc})}"
mkdir -p "${COMOUT}" "${COMOUT}/fix"

# Fire weather nest location from NAM
export COMINnam=${COMINnam:-$(compath.py nam/${nam_ver})}

mkdir -p "${DATA}/raw_topo"
mkdir -p "${DATA}/raw_topo/tmp"
#cd ${DATA}/raw_topo/tmp

mkdir -p "${DATA}/filtered_topo"
mkdir -p "${DATA}/shave_tmp"
mkdir -p "${DATA}/temp_orog_data"

#-----------------------------------------------------------------------
# Execute the script.
#-----------------------------------------------------------------------

export pgmout="${DATA}/raw_topo/tmp/OUTPUT.$$"
env

${HOMErrfs}/scripts/exrrfs_make_orog.sh
export err=$?; err_chk

if [ -e "$pgmout" ]; then
  cat $pgmout
fi

#-----------------------------------------------------------------------
# Print exit message.
#-----------------------------------------------------------------------

print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
