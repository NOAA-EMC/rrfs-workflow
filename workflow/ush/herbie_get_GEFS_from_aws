#!/usr/bin/env python
#  User the Python package Herbie to download gfs/rap/gefs data from AWS, which is more reliable
#
from herbie import Herbie
from datetime import datetime, timedelta
import os
import shutil
import sys

args = sys.argv
nargs = len(args) - 1
if nargs < 2:
    print(f"{args[0]} YYYYMMDD-YYYYMMDD [0-70]\n")
    print(f'  the first parameter specifies the date range to download')
    print(f'  the second parameter specifies the fhr range to download, default to 0-70')
    exit()

date_range = args[1]
fhr_range = args[2]

model = "gefs"  # gfs, rap
dest_path = "./downloads"
fhr_interval = 3
cyc_interval = 6

two_dates = date_range.split("-")
date1 = datetime.strptime(two_dates[0], "%Y%m%d")
date2 = datetime.strptime(two_dates[1], "%Y%m%d")
date2 += timedelta(hours=23)
cur_date = date1
fhrs = fhr_range.split("-")
dcProduct = {"atmos.5": "pgrb2ap5", "atmos.5b": "pgrb2bp5"}

while cur_date <= date2:
    sdate0 = datetime.strftime(cur_date, "%Y%m%d%M")
    for product in ["atmos.5", "atmos.5b"]:
        final_dest = f'{dest_path}/{model.upper()}/{model}.{sdate0[:8]}/{sdate0[-2:]}'
        if os.path.exists(f'{final_dest}/{dcProduct[product]}'):
            print(f"'{final_dest}/{dcProduct[product]}' already exists, please rename or remove it first")
            exit()
        if os.path.exists(f'./tmp/{model}/{sdate0[:8]}'):
            shutil.rmtree(f'./tmp/{model}/{sdate0[:8]}')  # remove temporary directory to avoid contamination
        for fhr in range(int(fhrs[0]), int(fhrs[1]) + 1, fhr_interval):
            for member in [f"p{str(i).zfill(2)}" for i in range(1, 31)]:
                sdate = datetime.strftime(cur_date, "%Y-%m-%d %H:%M")
                try:
                    HB = Herbie(
                        sdate,
                        model=model,
                        product=product,
                        member=member,
                        fxx=fhr,
                        save_dir="./tmp",
                        overwrite=True,
                        verbose=False,
                    )
                    HB.download()
                except Exception as e:
                    print(f"Warning: Could not download {model},'{sdate}','{product}','{member}','f{fhr:03d}' : {e}")
        # ~~~~~~~~~~~
        os.makedirs(final_dest, exist_ok=True)
        shutil.move(f'./tmp/{model}/{sdate0[:8]}', f'{final_dest}/{dcProduct[product]}')

    cur_date += timedelta(hours=cyc_interval)
