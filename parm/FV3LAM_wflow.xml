{#

This is a Jinja-enabled Rocoto XML template. It is filled in using the
fill_template.py script, and is done automatically by the
generate_workflow.sh step of preparing a regional workflow configured
experiment.

See README.xml_templating.md for information on using the Templating mechanisms.
-#}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workflow [

<!--
Parameters needed by the job scheduler.
-->
<!ENTITY ACCOUNT         "{{ account }}">
<!ENTITY SERVICE_ACCOUNT "{{ service_account }}">
<!ENTITY HPSS_ACCOUNT    "{{ hpss_account }}">
<!ENTITY SCHED           "{{ sched }}">
<!ENTITY QUEUE_DEFAULT   "{{ queue_default }}">
<!ENTITY QUEUE_HPSS      "{{ queue_hpss }}">
<!ENTITY QUEUE_FCST      "{{ queue_fcst }}">
<!ENTITY QUEUE_POST      "{{ queue_post }}">
<!ENTITY QUEUE_PRDGEN    "{{ queue_prdgen }}">
<!ENTITY QUEUE_ANALYSIS  "{{ queue_analysis }}">
<!ENTITY QUEUE_GRAPHICS  "{{ queue_graphics }}">
<!ENTITY RRFS_RESERVE  {% if reservation %}"--reservation={{ reservation }}"{% else %}""{% endif %}>
<!ENTITY RRFS_POST_RESERVE  {% if reservation_post %}"--reservation={{ reservation_post }}"{% else %}""{% endif %}>

<!--
Workflow task names.
-->
<!ENTITY MAKE_GRID_TN            "{{ make_grid_tn }}">
<!ENTITY MAKE_OROG_TN            "{{ make_orog_tn }}">
<!ENTITY MAKE_SFC_CLIMO_TN       "{{ make_sfc_climo_tn }}">
<!ENTITY MAKE_ICS_TN             "{{ make_ics_tn }}">
<!ENTITY BLEND_ICS_TN            "{{ blend_ics_tn }}">
<!ENTITY MAKE_LBCS_TN            "{{ make_lbcs_tn }}">
<!ENTITY RUN_FCST_TN             "{{ run_fcst_tn }}">
<!ENTITY RUN_POST_TN             "{{ run_post_tn }}">
<!ENTITY RUN_PRDGEN_TN           "{{ run_prdgen_tn }}">
<!ENTITY RUN_BUFRSND_TN          "{{ run_bufrsnd_tn }}">
<!ENTITY ANALYSIS_GSI_TN         "{{ analysis_gsi }}">
<!ENTITY ANALYSIS_GSIDIAG_TN     "{{ analysis_gsidiag }}">
<!ENTITY ANALYSIS_SD_GSI_TN      "{{ analysis_sd_gsi }}">
<!ENTITY POSTANAL_TN             "{{ post_anal }}">
<!ENTITY OBSERVER_GSI_ENSMEAN_TN "{{ observer_gsi_ensmean }}">
<!ENTITY OBSERVER_GSI_TN         "{{ observer_gsi }}">
<!ENTITY PREP_CYC_SPINUP_TN      "{{ prep_cyc_spinup }}">
<!ENTITY PREP_CYC_PROD_TN        "{{ prep_cyc_prod }}">
<!ENTITY PREP_CYC_TN             "{{ prep_cyc }}">
<!ENTITY CALC_ENSMEAN_TN         "{{ calc_ensmean }}">
<!ENTITY PROCESS_RADAR_REF_TN    "{{ process_radarref }}">
<!ENTITY PROCESS_LIGHTNING_TN    "{{ process_lightning }}">
<!ENTITY PROCESS_GLMFED_TN       "{{ process_glmfed }}">
<!ENTITY PROCESS_BUFR_TN         "{{ process_bufr }}">
<!ENTITY RADAR_REFL2TTEN_TN      "{{ radar_refl2tten }}">
<!ENTITY CLDANL_NONVAR_TN        "{{ cldanl_nonvar }}">
<!ENTITY SAVE_RESTART_TN         "{{ save_restart }}">
<!ENTITY SAVE_DA_OUTPUT_TN       "{{ save_da_output }}">
<!ENTITY JEDI_ENVAR_IODA_TN      "{{ jedi_envar_ioda }}">
<!ENTITY IODA_PREPBUFR_TN        "{{ ioda_prepbufr }}">
<!ENTITY PROCESS_SMOKE_TN        "{{ process_smoke }}">
<!ENTITY PROCESS_PM_TN           "{{ process_pm }}">
<!ENTITY ADD_AEROSOL_TN          "{{ add_aerosol_tn }}">

<!ENTITY RUN_PREPSTART_TN     "run_prepstart">
<!ENTITY RUN_ANALYSIS_TN      "run_analysis_gsi">
<!ENTITY HYBRID_RADAR_REF_TN  "hybrid_radar_ref">
<!ENTITY RUN_ENKFUPDT_TN      "run_enkfupdt">
<!ENTITY ENKF_RADAR_REF_TN    "enkf_radarref">
<!ENTITY RUN_RECENTER_TN      "run_recenter">
<!ENTITY RUN_BUFR_TN          "run_bufr">
<!ENTITY CLEAN_TN             "run_clean">
<!ENTITY ARCHIVE_TN           "run_archive">
<!ENTITY RUN_SMOKE_TN         "run_proc_smoke">
<!ENTITY RUN_PM_TN            "run_proc_pm">
<!ENTITY RUN_IODA_PREPBUFR_TN      "run_ioda_prepbufr">

<!ENTITY TAG  "{{ tag }}">
<!ENTITY NET  "{{ net }}">

<!--
Flags that determine whether to run the specific tasks.
-->
<!ENTITY RUN_TASK_MAKE_GRID      "{{ run_task_make_grid | upper }}">
<!ENTITY RUN_TASK_MAKE_OROG      "{{ run_task_make_orog | upper }}">
<!ENTITY RUN_TASK_MAKE_SFC_CLIMO "{{ run_task_make_sfc_climo | upper }}">

<!--
Number of physical cores per node for the current machine.  This is used
below in the <nodesize> tag, but that tag is not clearly documented.  This
parameter may be unnecessary since each task now has its own variable that
specifies the number of processes per node being used (the PPN_... entities).
-->
<!ENTITY NCORES_PER_NODE "{{ ncores_per_node }}">

<!--
Directories and files.
-->
<!ENTITY JOBSdir                  "{{ jobsdir }}">
<!ENTITY LOG_BASEDIR              "{{ log_basedir }}">
<!ENTITY LOGDIR                   "{{ log_basedir }}/{{ run }}.@Y@m@d/@H">
<!ENTITY OBSPATH                  "{{ obspath }}">
<!ENTITY OBSPATH_PM               "{{ obspath_pm }}">
<!ENTITY CYCLE_BASEDIR            "{{ cycle_basedir }}">
<!ENTITY NWGES_BASEDIR            "{{ nwges_basedir }}">
<!ENTITY ENSCTRL_CYCLE_BASEDIR    "{{ ensctrl_cycle_basedir }}">
<!ENTITY ENSCTRL_NWGES_BASEDIR    "{{ ensctrl_nwges_basedir }}">
<!ENTITY ENSCTRL_COMOUT_BASEDIR   "{{ ensctrl_comout_basedir }}">
<!ENTITY ENSCTRL_COMOUT_DIR       "{{ ensctrl_comout_dir }}">
<!ENTITY RRFSE_FG_ROOT            "{{ rrfse_nwges_basedir }}">
{%- if is_rtma %}
<!ENTITY FG_ROOT                  "{{ fg_rootdir }}">
{%- else %}
<!ENTITY FG_ROOT                  "{{ nwges_basedir }}">
{%- endif %}
<!ENTITY GLOBAL_VAR_DEFNS_FP      "{{ global_var_defns_fp }}">
<!ENTITY LOAD_MODULES_RUN_TASK_FP "{{ load_modules_run_task_fp }}">

<!--
Reservation types.  Reservations specify the queue/partition and account
to use for a given task.  The "DEFAULT" reservation type is used for most
tasks.
-->
{%- if partition_default is not none %}
<!ENTITY RSRV_DEFAULT "<account>&ACCOUNT;</account><queue>&QUEUE_DEFAULT;</queue><partition>{{ partition_default }}</partition><native>&RRFS_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_DEFAULT "<account>&ACCOUNT;</account><queue>&QUEUE_DEFAULT;</queue>">
{%- endif %}
{%- if partition_hpss is not none %}
<!ENTITY RSRV_HPSS    "<account>&HPSS_ACCOUNT;</account><queue>&QUEUE_HPSS;</queue><partition>{{ partition_hpss }}</partition>">
{%- else %}
<!ENTITY RSRV_HPSS    "<account>&HPSS_ACCOUNT;</account><queue>&QUEUE_HPSS;</queue>">
{%- endif %}
{%- if partition_fcst is not none %}
<!ENTITY RSRV_FCST    "<account>&ACCOUNT;</account><queue>&QUEUE_FCST;</queue><partition>{{ partition_fcst }}</partition>">
{%- else %}
<!ENTITY RSRV_FCST    "<account>&ACCOUNT;</account><queue>&QUEUE_FCST;</queue>">
{%- endif %}
{%- if partition_analysis is not none %}
<!ENTITY RSRV_ANALYSIS    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue><partition>{{ partition_analysis }}</partition>">
<!ENTITY RSRV_ENKF    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue><partition>{{ partition_analysis }}</partition><native>&RRFS_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_ANALYSIS    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue>">
<!ENTITY RSRV_ENKF    "<account>&ACCOUNT;</account><queue>&QUEUE_ANALYSIS;</queue>">
{%- endif %}
{%- if partition_post is not none %}
<!ENTITY RSRV_POST    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_POST;</queue><partition>{{ partition_post }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_POST    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_POST;</queue>">
{%- endif %}
{%- if partition_prdgen is not none %}
<!ENTITY RSRV_PRDGEN    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_PRDGEN;</queue><partition>{{ partition_prdgen }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_PRDGEN    "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_PRDGEN;</queue>">
{%- endif %}
{%- if partition_graphics is not none %}
{%- if do_ens_graphics %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><partition>{{ partition_graphics }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- else %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><partition>{{ partition_graphics }}</partition><native>&RRFS_POST_RESERVE;</native>">
{%- endif %}
{%- else %}
<!ENTITY RSRV_GRAPHICS   "<account>&SERVICE_ACCOUNT;</account><queue>&QUEUE_GRAPHICS;</queue><native>--exclusive</native>">
{%- endif %}

<!--
define resources used for each tasks
-->
<!ENTITY RESOURCES_PROC_SMOKE     "<nodes>{{ nnodes_proc_smoke }}:ppn={{ ppn_proc_smoke }}</nodes>">
<!ENTITY RESOURCES_PROC_PM        "<nodes>{{ nnodes_proc_pm }}:ppn={{ ppn_proc_pm }}</nodes>">
<!ENTITY RESOURCES_PROC_RADAR     "<nodes>{{ nnodes_proc_radar }}:ppn={{ ppn_proc_radar }}</nodes>">
<!ENTITY RESOURCES_PROC_LIGHTNING "<nodes>{{ nnodes_proc_lightning }}:ppn={{ ppn_proc_lightning }}</nodes>">
<!ENTITY RESOURCES_PROC_GLMFED    "<nodes>{{ nnodes_proc_glmfed }}:ppn={{ ppn_proc_glmfed }}</nodes>">
<!ENTITY RESOURCES_PROC_BUFR      "<nodes>{{ nnodes_proc_bufr }}:ppn={{ ppn_proc_bufr }}</nodes>">
<!ENTITY RESOURCES_ADD_AEROSOL    "<nodes>{{ nnodes_add_aerosol }}:ppn={{ ppn_add_aerosol }}</nodes>">
<!ENTITY RESOURCES_PREP_CYC       "<nodes>{{ nnodes_run_prepstart }}:ppn={{ ppn_run_prepstart }}</nodes>">
<!ENTITY RESOURCES_SAVE_RESTART   "<nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>">
<!ENTITY RESOURCES_RUN_RECENTER   "<nodes>{{ nnodes_run_recenter }}:ppn={{ ppn_run_recenter }}</nodes>">
<!ENTITY RESOURCES_POSTANAL       "<nodes>{{ nnodes_run_postanal }}:ppn={{ ppn_run_postanal }}</nodes>">
<!ENTITY RESOURCES_GSIDIAG        "<nodes>{{ nnodes_run_gsidiag }}:ppn={{ ppn_run_gsidiag }}</nodes>">
<!ENTITY RESOURCES_RUN_PRDGEN     "<nodes>{{ nnodes_run_prdgen }}:ppn={{ ppn_run_prdgen }}</nodes>">
<!ENTITY RESOURCES_NONVAR_CLD     "<nodes>{{ nnodes_run_nonvarcldanl }}:ppn={{ ppn_run_nonvarcldanl }}</nodes>">

{%- if machine in ["WCOSS2"]  %}
<!ENTITY RESOURCES_RUN_BUFRSND  "<nodes>{{ nnodes_run_bufrsnd }}:ppn={{ ppn_run_bufrsnd }}:tpp={{ tpp_run_bufrsnd }}</nodes>">
<!ENTITY RESOURCES_RUN_POST     "<nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}:tpp={{ tpp_run_post }}</nodes>">
<!ENTITY RESOURCES_RUN_ENKF     "<nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}:tpp={{ tpp_run_enkf }}</nodes>">
<!ENTITY RESOURCES_MAKE_ICS     "<nodes>{{ nnodes_make_ics }}:ppn={{ ppn_make_ics }}:tpp={{ tpp_make_ics }}</nodes>">
<!ENTITY RESOURCES_BLEND_ICS    "<nodes>{{ nnodes_blend_ics }}:ppn={{ ppn_blend_ics }}</nodes>">
<!ENTITY RESOURCES_MAKE_LBCS    "<nodes>{{ nnodes_make_lbcs }}:ppn={{ ppn_make_lbcs }}:tpp={{ tpp_make_lbcs }}</nodes>">
<!ENTITY RESOURCES_ANALYSIS_GSI "<nodes>{{ nnodes_run_analysis }}:ppn={{ ppn_run_analysis }}:tpp={{ tpp_run_analysis }}</nodes>">
<!ENTITY RESOURCES_FCST_SPINUP  "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ tpp_run_fcst }}</nodes>">
<!ENTITY RESOURCES_FCST_PROD    "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}:tpp={{ tpp_run_fcst }}</nodes>">
<!ENTITY NODESIZE_ALL    "">
<!ENTITY NATIVE_ALL          "<native>-l place=excl</native>">
<!ENTITY NATIVE_ANALYSIS_GSI "<native>-l place=excl</native>">
<!ENTITY NATIVE_FCST_SPINUP  "<native>-l place=excl</native>">
<!ENTITY NATIVE_FCST_PROD    "<native>-l place=excl</native>">
{%- if is_rtma %}
<!ENTITY NATIVE_NONVAR_CLD   "<native>-l place=excl:scatter</native>">
{%- endif %}
{%- elif machine in ["JET"] %}
<!ENTITY RESOURCES_RUN_BUFRSND  "<nodes>{{ nnodes_run_bufrsnd }}:ppn={{ ppn_run_bufrsnd }}</nodes>">
<!ENTITY RESOURCES_RUN_POST    "<nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>">
<!ENTITY RESOURCES_RUN_ENKF    "<nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}</nodes>">
<!ENTITY RESOURCES_MAKE_ICS    "<nodes>{{ nnodes_make_ics }}:ppn={{ ppn_make_ics }}</nodes>">
<!ENTITY RESOURCES_BLEND_ICS   "<nodes>{{ nnodes_blend_ics }}:ppn={{ ppn_blend_ics }}</nodes>">
<!ENTITY RESOURCES_MAKE_LBCS   "<nodes>{{ nnodes_make_lbcs }}:ppn={{ ppn_make_lbcs }}</nodes>">
<!ENTITY RESOURCES_ANALYSIS_GSI    "<cores>{{ ncores_run_analysis }}</cores>">
<!ENTITY RESOURCES_FCST_SPINUP "<cores>{{ ncores_run_fcst }}</cores>">
<!ENTITY RESOURCES_FCST_PROD   "<cores>{{ ncores_run_fcst }}</cores>">
<!ENTITY NODESIZE_ALL    "<nodesize>{{ ncores_per_node }}</nodesize>">
<!ENTITY NATIVE_ALL         "<native>--export=NONE</native>">
<!ENTITY NATIVE_ANALYSIS_GSI    "<native>{{ native_run_analysis }} &RRFS_RESERVE;</native>">
<!ENTITY NATIVE_FCST_SPINUP "<native>{{ native_run_fcst }} &RRFS_RESERVE;</native>">
<!ENTITY NATIVE_FCST_PROD   "<native>{{ native_run_fcst }} &RRFS_RESERVE;</native>">
{%- elif machine in ["HERA"] %}
<!ENTITY RESOURCES_RUN_BUFRSND  "<nodes>{{ nnodes_run_bufrsnd }}:ppn={{ ppn_run_bufrsnd }}</nodes>">
<!ENTITY RESOURCES_RUN_POST     "<nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>">
<!ENTITY RESOURCES_RUN_ENKF     "<nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}</nodes>">
<!ENTITY RESOURCES_MAKE_ICS     "<nodes>{{ nnodes_make_ics }}:ppn={{ ppn_make_ics }}</nodes>">
<!ENTITY RESOURCES_BLEND_ICS    "<nodes>{{ nnodes_blend_ics }}:ppn={{ ppn_blend_ics }}</nodes>">
<!ENTITY RESOURCES_MAKE_LBCS    "<nodes>{{ nnodes_make_lbcs }}:ppn={{ ppn_make_lbcs }}</nodes>">
<!ENTITY RESOURCES_ANALYSIS_GSI "<cores>{{ ncores_run_analysis }}</cores>">
<!ENTITY RESOURCES_FCST_SPINUP  "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>">
<!ENTITY RESOURCES_FCST_PROD    "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>">
<!ENTITY NODESIZE_ALL    "<nodesize>{{ ncores_per_node }}</nodesize>">
<!ENTITY NATIVE_ALL         "<native>--export=NONE</native>">
<!ENTITY NATIVE_ANALYSIS_GSI    "<native>{{ native_run_analysis }} &RRFS_RESERVE;</native>">
<!ENTITY NATIVE_FCST_SPINUP "">
<!ENTITY NATIVE_FCST_PROD   "">
{%- else %}
<!ENTITY RESOURCES_RUN_BUFRSND  "<nodes>{{ nnodes_run_bufrsnd }}:ppn={{ ppn_run_bufrsnd }}</nodes>">
<!ENTITY RESOURCES_RUN_POST     "<nodes>{{ nnodes_run_post }}:ppn={{ ppn_run_post }}</nodes>">
<!ENTITY RESOURCES_RUN_ENKF     "<nodes>{{ nnodes_run_enkf }}:ppn={{ ppn_run_enkf }}</nodes>">
<!ENTITY RESOURCES_MAKE_ICS     "<nodes>{{ nnodes_make_ics }}:ppn={{ ppn_make_ics }}</nodes>">
<!ENTITY RESOURCES_BLEND_ICS    "<nodes>{{ nnodes_blend_ics }}:ppn={{ ppn_blend_ics }}</nodes>">
<!ENTITY RESOURCES_MAKE_LBCS    "<nodes>{{ nnodes_make_lbcs }}:ppn={{ ppn_make_lbcs }}</nodes>">
<!ENTITY RESOURCES_ANALYSIS_GSI "<nodes>{{ nnodes_run_analysis }}:ppn={{ ppn_run_analysis }}</nodes>">
<!ENTITY RESOURCES_FCST_SPINUP  "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>">
<!ENTITY RESOURCES_FCST_PROD    "<nodes>{{ nnodes_run_fcst }}:ppn={{ ppn_run_fcst }}</nodes>">
<!ENTITY NODESIZE_ALL    "<nodesize>{{ ncores_per_node }}</nodesize>">
<!ENTITY NATIVE_ALL         "<native>--export=NONE</native>">
<!ENTITY NATIVE_ANALYSIS_GSI    "">
<!ENTITY NATIVE_FCST_SPINUP "">
<!ENTITY NATIVE_FCST_PROD   "">
{%- endif %}

<!ENTITY WALLTIME_PROC_SMOKE      "{{ wtime_proc_smoke }}">
<!ENTITY WALLTIME_PROC_PM         "{{ wtime_proc_pm }}">
<!ENTITY WALLTIME_PROC_RADAR      "{{ wtime_proc_radar }}">
<!ENTITY WALLTIME_PROC_LIGHTNING  "{{ wtime_proc_lightning }}">
<!ENTITY WALLTIME_PROC_BUFR       "{{ wtime_proc_bufr }}">
<!ENTITY WALLTIME_PREP_CYC        "{{ wtime_run_prepstart }}">
<!ENTITY WALLTIME_SAVE_RESTART    "{{ wtime_save_restart }}">
<!ENTITY WALLTIME_RUN_RECENTER    "{{ wtime_run_recenter }}">
<!ENTITY WALLTIME_POSTANAL        "{{ wtime_run_postanal }}">
<!ENTITY WALLTIME_RUN_PRDGEN      "{{ wtime_run_prdgen }}">
<!ENTITY WALLTIME_NONVAR_CLD      "{{ wtime_run_nonvarcldanl }}">
<!ENTITY WALLTIME_RUN_POST        "{{ wtime_run_post }}">
<!ENTITY WALLTIME_RUN_ENKF        "{{ wtime_run_enkf }}">
<!ENTITY WALLTIME_MAKE_ICS        "{{ wtime_make_ics }}">
<!ENTITY WALLTIME_BLEND_ICS       "{{ wtime_blend_ics }}">
<!ENTITY WALLTIME_MAKE_LBCS       "{{ wtime_make_lbcs }}">
<!ENTITY WALLTIME_ANALYSIS_GSI    "{{ wtime_run_analysis }}">
<!ENTITY WALLTIME_FCST_SPINUP     "{{ wtime_run_fcst_spinup }}">
<!ENTITY WALLTIME_FCST_PROD       "{{ wtime_run_fcst }}">
<!ENTITY WALLTIME_FCST_PROD_LONG  "{{ wtime_run_fcst_long }}">
<!ENTITY WALLTIME_POSTANAL        "{{ wtime_run_postanal }}">
<!ENTITY WALLTIME_GSIDIAG         "{{ wtime_run_gsidiag }}">
<!ENTITY WALLTIME_PROC_GLMFED     "{{ wtime_proc_glmfed }}">
<!ENTITY WALLTIME_ADD_AEROSOL     "{{ wtime_add_aerosol }}">

<!ENTITY MEMO_PROC_SMOKE   "{{ memo_proc_smoke }}">
<!ENTITY MEMO_PROC_PM      "{{ memo_proc_pm }}">
<!ENTITY MEMO_PROC_BUFR    "{{memo_run_processbufr }}">
<!ENTITY MEMO_PREP_CYC     "<memory>{{ memo_prep_cyc}}</memory>">
<!ENTITY MEMO_RUN_PRDGEN   "{{ memo_run_prdgen }}">
<!ENTITY MEMO_NONVAR_CLD   "{{ memo_run_nonvarcldanl }}">
<!ENTITY MEMO_PROC_GLMFED  "{{ memo_proc_glmfed }}">
<!ENTITY MEMO_ADD_AEROSOL  "{{ memo_add_aerosol }}">

{%- if do_retro %}
<!ENTITY DEADLINE_PRE      "999:00:00">
<!ENTITY DEADLINE_ANALYSIS "999:00:00">
<!ENTITY DEADLINE_FCST     "999:30:00">
<!ENTITY DEADLINE_POST     "999:00:00">
<!ENTITY DEADLINE_GRAPHICS "999:00:00">
<!ENTITY DEADLINE_RECENTER "999:00:00">
<!ENTITY DEADLINE_SAVE_RESTART "999:00:00">
<!ENTITY WALL_LIMIT_PRE ''>
<!ENTITY WALL_LIMIT_ANALYSIS ''>
<!ENTITY WALL_LIMIT_FCST ''>
<!ENTITY WALL_LIMIT_POST ''>
<!ENTITY WALL_LIMIT_BUFR ''>
<!ENTITY WALL_LIMIT_BUFRSND ''>
<!ENTITY WALL_LIMIT_GRAPHICS ''>
<!ENTITY WALL_LIMIT_RECENTER ''>
<!ENTITY WALL_LIMIT_SAVE_RESTART ''>
{%- else %}
<!ENTITY DEADLINE_PRE      "16:00:00">
<!ENTITY DEADLINE_ANALYSIS "16:00:00">
<!ENTITY DEADLINE_FCST     "23:30:00">
<!ENTITY DEADLINE_POST     "24:00:00">
<!ENTITY DEADLINE_GRAPHICS "24:00:00">
<!ENTITY DEADLINE_RECENTER "24:00:00">
<!ENTITY DEADLINE_SAVE_RESTART "24:00:00">
<!ENTITY WALL_LIMIT_PRE '<deadline><cyclestr offset="&DEADLINE_PRE;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_ANALYSIS '<deadline><cyclestr offset="&DEADLINE_ANALYSIS;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_FCST '<deadline><cyclestr offset="&DEADLINE_FCST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_POST '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_BUFR '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_BUFRSND '<deadline><cyclestr offset="&DEADLINE_POST;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_GRAPHICS '<deadline><cyclestr offset="&DEADLINE_GRAPHICS;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_RECENTER '<deadline><cyclestr offset="&DEADLINE_RECENTER;">@Y@m@d@H@M</cyclestr></deadline>'>
<!ENTITY WALL_LIMIT_SAVE_RESTART '<deadline><cyclestr offset="&DEADLINE_SAVE_RESTART;">@Y@m@d@H@M</cyclestr></deadline>'>
{%- endif %}

<!ENTITY START_TIME_SPINUP "{{ start_time_spinup }}">
<!ENTITY START_TIME_PROD "{{ start_time_prod }}">
<!ENTITY START_TIME_CONVENTIONAL_SPINUP "{{ start_time_conventional_spinup }}">
<!ENTITY START_TIME_BLENDING "{{ start_time_blending }}">
<!ENTITY START_TIME_LATE_ANALYSIS "{{ start_time_late_analysis }}">
<!ENTITY START_TIME_CONVENTIONAL "{{ start_time_conventional }}">
<!ENTITY START_TIME_IODA_PREPBUFR "{{ start_time_ioda_prepbufr }}">
<!ENTITY START_TIME_NSSLMOSIAC   "{{ start_time_nsslmosiac }}">
<!ENTITY START_TIME_LIGHTNINGNC  "{{ start_time_lightningnc }}">
<!ENTITY START_TIME_PROC_GLMFED  "{{ start_time_proc_glmfed }}">
<!ENTITY START_TIME_PROCSMOKE  "{{ start_time_procsmoke }}">
<!ENTITY START_TIME_PROCPM  "{{ start_time_procpm }}">
<!ENTITY STARTYEAR  "{{ startyear }}">
<!ENTITY STARTMONTH "{{ startmonth }}">
<!ENTITY STARTDAY   "{{ startday }}">
<!ENTITY STARTHOUR  "{{ starthour }}">
<!ENTITY ENDYEAR  "{{ endyear }}">
<!ENTITY ENDMONTH "{{ endmonth }}">
<!ENTITY ENDDAY   "{{ endday }}">
<!ENTITY ENDHOUR  "{{ endhour }}">

]>

{%- if do_retro %}
<workflow realtime="F" scheduler="&SCHED;" cyclethrottle="12">
{% else %}
<workflow realtime="T" scheduler="&SCHED;" cyclethrottle="26" cyclelifespan="01:00:00:00">
{%- endif %}
{# Double quotes are required inside the strftime! Expect an error from reading the template if using single quotes. #}
  <cycledef group="at_start">{{ at_start_cycledef }} </cycledef>

  <cycledef group="initial"> {{ initial_cycledef }} </cycledef>
  <cycledef group="boundary"> {{ boundary_cycledef }} </cycledef>

  <cycledef group="spinupcyc"> {{ spinup_cycledef }} </cycledef>
  <cycledef group="prodcyc"> {{ prod_cycledef }} </cycledef>
  <cycledef group="prodcyc_long"> {{ prodlong_cycledef }} </cycledef>

{%- if do_save_da_output %}
  <cycledef group="savedacyc"> {{ saveda_cycledef }} </cycledef>
{%- endif %}
  <cycledef group="recentercyc"> {{ recenter_cycledef }} </cycledef>
  <cycledef group="archive">  {{ archive_cycledef }} </cycledef> 

  <log>
    <cyclestr>&LOGDIR;/FV3LAM_wflow_&TAG;.log</cyclestr>
  </log>

<!-- 
The following command works to call the J-job for a given task (in this
case the MAKE_GRID_TN task) if in the script LOAD_MODULES_RUN_TASK_FP we 
do NOT call exec to run the J-job.  The command first sources the script
LOAD_MODULES_RUN_TASK_FP and then runs the J-job, so it is simpler than
calling exec and thus preferred if NCO accepts it.  Note that the portion
of the command that sources LOAD_MODULES_RUN_TASK_FP also passes an 
argument to it (the argument being the name of the task).  This works in
bash but it probably won't work in sh.

If this method is acceptable to NCO, then for clarity maybe we can
source LOAD_MODULES_RUN_TASK_FP within the J-job instead of here since
we are already sourcing other files in the J-job anyway.
-->
<!--
    <command>{ . &LOAD_MODULES_RUN_TASK_FP; "&MAKE_GRID_TN;";
               &JOBSdir;/JRRFS_MAKE_GRID;
             }</command>
-->
<!--
The following command works if we call exec in LOAD_MODULES_RUN_TASK_FP
to run the J-job.  This passes the J-job script as the second argument
to LOAD_MODULES_RUN_TASK_FP (the first argument is the task name).  The
J-job then uses exec to run the J-job (while also terminating the LOAD_-
MODULES_RUN_TASK_FP script.
-->

{%- if run_task_make_grid %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&MAKE_GRID_TN;" cycledefs="at_start" maxtries="{{ maxtries_make_grid }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&MAKE_GRID_TN;" "&JOBSdir;/JRRFS_MAKE_GRID"</command>
    <nodes>{{ nnodes_make_grid }}:ppn={{ ppn_make_grid }}</nodes>
    <walltime>{{ wtime_make_grid }}</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&MAKE_GRID_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&MAKE_GRID_TN;.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

  </task>
{% endif %}

{%- if run_task_make_orog %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&MAKE_OROG_TN;" cycledefs="at_start" maxtries="{{ maxtries_make_orog }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&MAKE_OROG_TN;" "&JOBSdir;/JRRFS_MAKE_OROG"</command>
    <nodes>{{ nnodes_make_orog }}:ppn={{ ppn_make_orog }}</nodes>
    <walltime>{{ wtime_make_orog }}</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&MAKE_OROG_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&MAKE_OROG_TN;.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <dependency>
      <or>
        <taskdep task="&MAKE_GRID_TN;"/>
        <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
      </or>
    </dependency>

  </task>
{% endif %}

{%- if run_task_make_sfc_climo %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&MAKE_SFC_CLIMO_TN;" cycledefs="at_start" maxtries="{{ maxtries_make_sfc_climo }}">

    &RSRV_DEFAULT;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&MAKE_SFC_CLIMO_TN;" "&JOBSdir;/JRRFS_MAKE_SFC_CLIMO"</command>
    <nodes>{{ nnodes_make_sfc_climo }}:ppn={{ ppn_make_sfc_climo }}</nodes>
    <walltime>{{ wtime_make_sfc_climo }}</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&MAKE_SFC_CLIMO_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&MAKE_SFC_CLIMO_TN;.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&MAKE_GRID_TN;"/>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
          <taskdep task="&MAKE_OROG_TN;"/>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
      </and>
    </dependency>

  </task>
{% endif %}


{%- if not do_ensfcst %}
<!-- beginning of meta block for prod spinup  -->
<metatask name="data_preprocessing">
  
{%- if do_spinup %}
  <var name="cycletype">spinupcyc prodcyc,prodcyc_long</var>
  <var name="type">spinup prod</var>
{% else %}
  <var name="cycletype">prodcyc,prodcyc_long</var>
  <var name="type">prod</var>
{%- endif %}

{%- if do_smoke_dust %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&PROCESS_SMOKE_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_smoke }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_SMOKE_TN;" "&JOBSdir;/JRRFS_PROCESS_SMOKE"</command>

    &RESOURCES_PROC_SMOKE;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_SMOKE;</walltime>
    <memory>&MEMO_PROC_SMOKE;</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_SMOKE_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_SMOKE_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>NWGES_DIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_PROCSMOKE;">@Y@m@d@H@M00</cyclestr></timedep>
        {%- if do_retro %}
        <datadep age="00:00:01:00"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
        {%- endif %}
      </and>
    </dependency>

  </task>
{%- endif %}

{%- if do_pm_da %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&PROCESS_PM_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_pm }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PM_TN;" "&JOBSDIR;/JRRFS_PROCESS_PM"</command>

    &RESOURCES_PROC_PM;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_PM;</walltime>
    <memory>&MEMO_PROC_PM;</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_PM_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_PM_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>NWGES_DIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_PROCPM;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
{%- endif %}


{%- if do_nonvar_cldanal or do_refl2tten or do_enkf_radar_ref or do_envar_radar_ref %}
<!--
************************************************************************
************************************************************************
--> 
  <task name="&PROCESS_RADAR_REF_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_radarref }}">
    
    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_PROCESS_RADARREF"</command>
      
    &RESOURCES_PROC_RADAR;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_RADAR;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_RADAR_REF_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_RADAR_REF_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>
        
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>RADAR_REF_THINNING</name><value>{{ radar_ref_thinning }}</value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>
        
    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_NSSLMOSIAC;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>

{%- if do_nldn_lght %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&PROCESS_LIGHTNING_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_lightning }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_PROCESS_LIGHTNING"</command>

    &RESOURCES_PROC_LIGHTNING;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_LIGHTNING;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_LIGHTNING_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_LIGHTNING_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_LIGHTNINGNC;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>
{%- endif %}

{%- if do_glmfed_da %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&PROCESS_GLMFED_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_proc_glmfed }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_SMOKE_TN;" "&JOBSdir;/JRRFS_PROCESS_GLMFED"</command>

    &RESOURCES_PROC_GLMFED;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_GLMFED;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_GLMFED_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_GLMFED_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>PREP_MODEL</name><value>0</value></envar>

    <dependency>
        <timedep><cyclestr offset="&START_TIME_PROC_GLMFED;">@Y@m@d@H@M00</cyclestr></timedep>
    </dependency>

  </task>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&PROCESS_BUFR_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_process_bufr }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_PROCESS_BUFR"</command>

    &RESOURCES_PROC_BUFR;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PROC_BUFR;</walltime>
    <memory>&MEMO_PROC_BUFR;</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&PROCESS_BUFR_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&PROCESS_BUFR_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_ioda_prepbufr %}
<!--
     ************************************************************************
************************************************************************
-->

  <task name="&IODA_PREPBUFR_TN;_#type#" cycledefs="#cycletype#"  maxtries="{{ maxtries_ioda_prepbufr }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_IODA_PREPBUFR_TN;" "&JOBSdir;/JRRFS_IODA_PREPBUFR"</command>

    <nodes>{{ nnodes_run_ioda_prepbufr }}:ppn={{ ppn_run_ioda_prepbufr }}</nodes>
    <walltime>{{ wtime_run_ioda_prepbufr }}</walltime>
    <memory>{{ memo_run_ioda_prepbufr }}</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&IODA_PREPBUFR_TN;_#type#</jobname>
    <join><cyclestr>&LOGDIR;/&IODA_PREPBUFR_TN;_#type#_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>#type#</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value></value></envar>

    <dependency>
      <and>
        <timedep><cyclestr offset="&START_TIME_IODA_PREPBUFR;">@Y@m@d@H@M00</cyclestr></timedep>
      </and>
    </dependency>

  </task>

{%- endif %}
</metatask>
 
{% endif %}
<!--
************************************************************************
************************************************************************
-->
{% if not is_rtma %}
{%- if do_ensemble %}
 <metatask name="run_ensemble_pre">

  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>
  {%- if do_enscontrol %}
    <var name="subdirGE">/gec00{% for m in range(2, num_ens_members+1) %}{{ " /gep%02d"%m }}{% endfor %}</var>
    <var name="memNameWRF">_mem0000{% for m in range(2, num_ens_members+1) %}{{ " _mem%04d"%m }}{% endfor %} </var>
  {%- else %}
    <var name="subdirGE">{% for m in range(1, num_ens_members+1) %}{{ " /gep%02d"%m }}{% endfor %}</var>
    <var name="memNameWRF">{% for m in range(1, num_ens_members+1) %}{{ " _mem%04d"%m }}{% endfor %} </var>
    <var name="memNameGDAS">{% for m in range(1, num_ens_members+1) %}{{ " mem%03d"%m }}{% endfor %} </var>
  {%- endif %}
    <var name="subdirGDAS">{% for m in range(1, num_ens_members+1) %}{{ " /mem%03d"%m }}{% endfor %}</var>
{%- endif %}

<!--
************************************************************************
************************************************************************
-->
  <task name="&MAKE_ICS_TN;{{ uscore_ensmem_name }}" cycledefs="initial" maxtries="{{ maxtries_make_ics }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&MAKE_ICS_TN;" "&JOBSdir;/JRRFS_MAKE_ICS"</command>
    &RESOURCES_MAKE_ICS;
    &NATIVE_ALL;
    <walltime>&WALLTIME_MAKE_ICS;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&MAKE_ICS_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&MAKE_ICS_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>EXTRN_MDL_NAME</name><value>{{ extrn_mdl_name_ics }}</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>GEFS_INPUT_SUBDIR</name><value>#subdirGE#</value></envar>
    <envar><name>WRF_MEM_NAME</name><value>#memNameWRF#</value></envar>
    <envar><name>GDASENKF_INPUT_SUBDIR</name><value>#subdirGDAS#</value></envar>
    <envar><name>GDAS_MEM_NAME</name><value>#memNameGDAS#</value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&MAKE_GRID_TN;"/>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
          <taskdep task="&MAKE_OROG_TN;"/>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
        <or>
          <taskdep task="&MAKE_SFC_CLIMO_TN;"/>
          <streq><left>&RUN_TASK_MAKE_SFC_CLIMO;</left><right>FALSE</right></streq>
        </or>
        <or>
          {%- if machine in ["WCOSS2"]  %}
            {%- if extrn_mdl_name_ics in ["FV3GFS"] %}
                {%- if do_retro %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
                {% else %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.atmf{{ "%03d" % extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
                {%- endif %}
            {%- elif extrn_mdl_name_ics in ["GDASENKF"] %}
            <and>
              <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
              <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
            </and>
            {%- elif extrn_mdl_name_ics in ["GEFS"] %}
                {%- if do_retro %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/#subdirGE#/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
                {% else %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gefs.@Y@m@d/@H/atmos/pgrb2bp5/#subdirGE#.t@Hz.pgrb2b.0p50.f{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
                {%- endif %}
            {% else %}
                {%- if do_retro %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
                {% else %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
                {%- endif %}
            {%- endif %}
          {% else %}
          {%- if extrn_mdl_name_ics in ["GEFS"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/#subdirGE#/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
          {%- elif extrn_mdl_name_ics in ["GDASENKF"] %}
          <and>
          {%- if machine in ["HERA"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.nc</cyclestr></datadep>
          {%- elif machine in ["JET"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
          {%- elif machine in ["ORION","HERCULES"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.atmf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H00.gdas.t@Hz.sfcf00{{ extrn_mdl_ics_offset_hrs }}.#memNameGDAS#.nc</cyclestr></datadep>
          {%- endif %}
          </and>
          {%- elif extrn_mdl_name_ics in ["HRRRDAS"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@Y@m@d@H/postprd#memNameWRF#/wrfnat#memNameWRF#_00.grib2</cyclestr></datadep>
          {%- else %}
          {%- if machine in ["JET"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
          {%- elif machine in ["HERA"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
          {%- elif machine in ["ORION","HERCULES"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_ics }}/@y@j@H000{{ "%03d" % extrn_mdl_ics_offset_hrs }}</cyclestr></datadep>
          {%- endif %}
          {%- endif %}
          {%- endif %}
        </or>
      </and>
    </dependency>

  </task>

  {% if do_ens_blending %}
  <task name="&BLEND_ICS_TN;{{ uscore_ensmem_name }}" cycledefs="initial" maxtries="{{ maxtries_blend_ics }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&BLEND_ICS_TN;" "&JOBSdir;/JRRFS_BLEND_ICS"</command>
    &RESOURCES_BLEND_ICS;
    &NATIVE_ALL;
    <walltime>&WALLTIME_BLEND_ICS;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&BLEND_ICS_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&BLEND_ICS_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&MAKE_ICS_TN;{{ uscore_ensmem_name }}"/>
        <or>
        {%- if not do_retro %}
          <timedep><cyclestr offset="&START_TIME_BLENDING;">@Y@m@d@H@M00</cyclestr></timedep>
        {%- endif %}
          <and>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0001/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0002/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0003/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0004/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0005/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0006/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0007/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0008/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0009/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0010/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0011/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0012/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0013/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0014/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0015/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0016/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0017/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0018/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0019/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0020/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0021/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0022/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0023/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0024/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0025/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0026/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0027/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0028/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0029/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr offset="-1:00:00">&FG_ROOT;/@Y@m@d@H/mem0030/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </and>
        </or>
      </and>
    </dependency>

  </task>
  {% endif %}

<!--
************************************************************************
************************************************************************
-->
<metatask name="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}">
  <var name="bcgrp">{% for h in range(0, boundary_proc_group_num) %}{{ " %02d" % h  }}{% endfor %}</var>

  <task name="&MAKE_LBCS_TN;_#bcgrp#{{ uscore_ensmem_name }}" cycledefs="boundary" maxtries="{{ maxtries_make_lbcs }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&MAKE_LBCS_TN;" "&JOBSdir;/JRRFS_MAKE_LBCS"</command>
    &RESOURCES_MAKE_LBCS;
    &NATIVE_ALL;
    <walltime>&WALLTIME_MAKE_LBCS;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&MAKE_LBCS_TN;_#bcgrp#{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&MAKE_LBCS_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H_#bcgrp#.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>EXTRN_MDL_NAME</name><value>{{ extrn_mdl_name_lbcs }}</value></envar>
    <envar><name>BOUNDARY_LEN</name><value>{{ boundary_len_hrs }}</value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>GEFS_INPUT_SUBDIR</name><value>#subdirGE#</value></envar>
    <envar><name>GDASENKF_INPUT_SUBDIR</name><value>#subdirGDAS#</value></envar>
    <envar><name>GDAS_MEM_NAME</name><value>#memNameGDAS#</value></envar>
    <envar><name>bcgrp</name><value>#bcgrp#</value></envar>
    <envar><name>bcgrpnum</name><value>{{ boundary_proc_group_num }}</value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&MAKE_GRID_TN;"/>
          <streq><left>&RUN_TASK_MAKE_GRID;</left><right>FALSE</right></streq>
        </or>
        <or>
          <taskdep task="&MAKE_OROG_TN;"/>
          <streq><left>&RUN_TASK_MAKE_OROG;</left><right>FALSE</right></streq>
        </or>
        <or>
          <taskdep task="&MAKE_SFC_CLIMO_TN;"/>
          <streq><left>&RUN_TASK_MAKE_SFC_CLIMO;</left><right>FALSE</right></streq>
        </or>
        <and> 
<!-- Dependencies from the GET_GEFS_LBCS task -->
        {%- if extrn_mdl_name_lbcs in ["GEFS"] %}
          {%- if machine in ["WCOSS2"]  %}
            {%- if do_retro %}
              {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_len_hrs+extrn_mdl_lbcs_offset_hrs+1, 3) %}
            <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/#subdirGE#/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
              {%- endfor %}
            {% else %}
              {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_len_hrs+extrn_mdl_lbcs_offset_hrs+1, 3) %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gefs.@Y@m@d/@H/atmos/pgrb2bp5/#subdirGE#.t@Hz.pgrb2b.0p50.f{{ "%03d" % h }}</cyclestr></datadep>
              {%- endfor %}
            {%- endif %}
          {% else %}
            {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_len_hrs+extrn_mdl_lbcs_offset_hrs+1, 3) %}
            <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/#subdirGE#/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
            {%- endfor %}
          {%- endif %}
<!-- Dependencies from the GET_EXTRN_LBCS task -->
        {%- else %}
          {%- for h in range(extrn_mdl_lbcs_offset_hrs, boundary_len_hrs+extrn_mdl_lbcs_offset_hrs+1, bc_update_interval) %}
          {%- if machine in ["WCOSS2"]  %}
            {%- if fv3gfs_file_fmt_lbcs in ["netcdf"]  %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
            {%- else %}
              {%- if do_retro %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
              {%- else %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/gfs.@Y@m@d/@H/atmos/gfs.t@Hz.pgrb2.0p25.f{{ "%03d" % h }}</cyclestr></datadep>
              {%- endif %}
            {%- endif %}
          {%- else %}
          {%- if extrn_mdl_name_lbcs in ["GEFS"] %}
          <datadep age="00:00:05:00"> <cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/#subdirGE#/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
          {%- elif extrn_mdl_name_lbcs in ["GDASENKF"] %}
          {%- if machine in ["HERA"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.atmf{{ "%03d" % h }}.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/enkfgdas.@Y@m@d/@H/atmos/#subdirGDAS#/gdas.t@Hz.sfcf{{ "%03d" % h }}.nc</cyclestr></datadep>
          {%- elif machine in ["JET"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.atmf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.sfcf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
          {%- elif machine in ["ORION","HERCULES"] %}
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.atmf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
            <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H00.gdas.t@Hz.sfcf{{ "%03d" % h }}.#memNameGDAS#.nc</cyclestr></datadep>
          {%- endif %}
          {%- else %}
          {%- if machine in ["JET"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
          {%- elif machine in ["HERA"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
          {%- elif machine in ["ORION","HERCULES"] %}
          <datadep age="00:00:05:00"><cyclestr offset="-{{ extrn_mdl_lbcs_offset_hrs }}:00:00">{{ extrn_mdl_sysbasedir_lbcs }}/@y@j@H000{{ "%03d" % h }}</cyclestr></datadep>
          {%- endif %}
          {%- endif %}
          {%- endif %}
          {%- endfor %}

        {%- endif %}
        </and>
      </and>
    </dependency>

  </task>

</metatask>

{%- if run_task_add_aerosol %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ADD_AEROSOL_TN;{{ uscore_ensmem_name }}" cycledefs="boundary" maxtries="{{ maxtries_add_aerosol }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&ADD_AEROSOL_TN;" "&JOBSdir;/JRRFS_ADD_AEROSOL"</command>

    &RESOURCES_ADD_AEROSOL;
    &NATIVE_ALL;
    <walltime>&WALLTIME_ADD_AEROSOL;</walltime>
    <memory>&MEMO_ADD_AEROSOL;</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ADD_AEROSOL_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&ADD_AEROSOL_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <metataskdep metatask="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}"/>
    </dependency>
  </task>
{%- endif %}

{%- if do_ensemble %}
</metatask>
{%- endif %}

{%- endif %}
{%- if not do_ensfcst %}
{%- if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>
{%- endif %}

{%- if do_spinup %}
<!-- beginning of spinup block  -->
<!--
************************************************************************
************************************************************************
-->
 {%- if do_ensinit %}
  <task name="&PREP_CYC_SPINUP_TN;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">
 {% else %}
  <task name="&PREP_CYC_SPINUP_TN;{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">
 {%- endif %}

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PREPSTART_TN;" "&JOBSdir;/JRRFS_RUN_PREPSTART"</command>

    &RESOURCES_PREP_CYC;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PREP_CYC;</walltime>
    &NODESIZE_ALL;
    &MEMO_PREP_CYC;
    <jobname>&TAG;_&PREP_CYC_SPINUP_TN;_ensinit{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&PREP_CYC_SPINUP_TN;_ensinit_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
 {%- if do_ensinit %}
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>
 {%- endif %}
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
       <or>
<!-- for start spin up cycle -->
         <and>
           <or>
             {%- for h in cycl_hrs_spinstart %}
             <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
           </or>
           {% if do_ens_blending %}
           <taskdep task="&BLEND_ICS_TN;{{ uscore_ensmem_name }}"/>
           {% else %}
           <taskdep task="&MAKE_ICS_TN;{{ uscore_ensmem_name }}"/>
           {% endif %}
           <or>
             {%- for h in range(0,lbcs_search_hrs) %} 
             <metataskdep metatask="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}" cycle_offset="-{{ h }}:00:00"/>
             {%- endfor %}
           </or>
{%- if run_task_add_aerosol %}
           <taskdep task="&ADD_AEROSOL_TN;{{ uscore_ensmem_name }}"/>
{%- endif %}
{%- if do_retro %}
  {%- if not do_ensemble %}
           <datadep age="00:00:10:00"><cyclestr offset="00:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam/INPUT/gfs_ctrl.nc</cyclestr></datadep>
  {%- endif %}
{%- else %}
           <timedep><cyclestr offset="&START_TIME_SPINUP;">@Y@m@d@H@M00</cyclestr></timedep>
{%- endif %}
         </and>
<!-- for continue spin up cycles  -->
         <and>
           {%- for h in cycl_hrs_spinstart %}
           <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
           {%- endfor %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{%- else %}
           <timedep><cyclestr offset="&START_TIME_CONVENTIONAL_SPINUP;">@Y@m@d@H@M00</cyclestr></timedep>
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H/{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{%- endif %}
         </and>
       </or>
    </dependency>

  </task>

{% if do_ensinit -%}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_FCST_TN;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_FCST_TN;" "&JOBSdir;/JRRFS_RUN_FCST"</command>
    &RESOURCES_FCST_SPINUP;
    <walltime>&WALLTIME_FCST_SPINUP;</walltime>
    &NATIVE_ALL;
    &NATIVE_FCST_SPINUP;
    &NODESIZE_ALL;
    <jobname>&TAG;_&RUN_FCST_TN;_ensinit{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&RUN_FCST_TN;_ensinit_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>0</cyclestr></value></envar>

    <dependency>
        <and>   
          <or>    
           {%- for h in cycl_hrs_spinstart %}
            <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
           {%- endfor %}
          </or>   
          <taskdep task="&PREP_CYC_SPINUP_TN;_ensinit{{ uscore_ensmem_name }}"/>
        </and>  
    </dependency>

  </task> 
<!--
************************************************************************
************************************************************************
-->
    <task name="&SAVE_RESTART_TN;_ensinit{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&SAVE_RESTART_TN;" "&JOBSdir;/JRRFS_SAVE_RESTART"</command>
      &RESOURCES_SAVE_RESTART;
      &NATIVE_ALL;
      <walltime>&WALLTIME_SAVE_RESTART;</walltime>
      &NODESIZE_ALL;
      &MEMO_PREP_CYC;
      <jobname>&TAG;_&SAVE_RESTART_TN;_ensinit{{ uscore_ensmem_name }}</jobname>
      <join><cyclestr>&LOGDIR;/&SAVE_RESTART_TN;_ensinit_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>0</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>ensinit</cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_ensinit/RESTART/</cyclestr><cyclestr offset="{{ dt_atmos }}">@Y@m@d.@H@M@S.coupler.res</cyclestr></datadep>
            <datadep age="00:00:00:05"><cyclestr>&FG_ROOT;/@Y@m@d@H/run_blending</cyclestr> </datadep>
          </or>
        </and>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&PREP_CYC_SPINUP_TN;{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PREPSTART_TN;" "&JOBSdir;/JRRFS_RUN_PREPSTART"</command>
    &RESOURCES_PREP_CYC;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PREP_CYC;</walltime>
    &NODESIZE_ALL;
    &MEMO_PREP_CYC;
    <jobname>&TAG;_&PREP_CYC_SPINUP_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&PREP_CYC_SPINUP_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>CYCLE_SUBTYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>ENSCTRL_CYCLE_DIR</name><value><cyclestr>&ENSCTRL_CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
      <and>
       {% if do_ens_blending %}
       <taskdep task="&BLEND_ICS_TN;_mem#mem#"/>
       {% else %}
       <taskdep task="&MAKE_ICS_TN;_mem#mem#"/>
       {% endif %}
       <taskdep task="&SAVE_RESTART_TN;_ensinit{{ uscore_ensmem_name }}"/>
       <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/@H_spinup/nonvarcldanl_complete.txt</cyclestr></datadep>
      </and>
    </dependency>

  </task>
{%- endif %}
{%- if do_ens_blending or do_ensinit %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_RECENTER_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_recenter }}">
    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_RECENTER_TN;" &JOBSdir;/JRRFS_RUN_RECENTER</command>
    &RESOURCES_RUN_RECENTER;
    &NATIVE_ALL;
    <walltime>&WALLTIME_RUN_RECENTER;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&RUN_RECENTER_TN;_spinup</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&RUN_RECENTER_TN;_spinup_&TAG;@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_DIR</name><value><cyclestr>&ENSCTRL_CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_ROOT</name><value><cyclestr>&ENSCTRL_CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>

    <dependency>
      <and>
        {%- for m in range(1, num_ens_members+1) %}
        {%- if do_ensinit %}
          <taskdep task="&PREP_CYC_SPINUP_TN;_mem{{ "%04d" % m }}"/>
        {%- endif %}
        {%- endfor %}
        <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/@H_spinup/nonvarcldanl_complete.txt</cyclestr></datadep>
      </and>
    </dependency>
  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&CALC_ENSMEAN_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_RECENTER_TN;" "&JOBSdir;/JRRFS_CALC_ENSMEAN"</command>
    &RESOURCES_RUN_RECENTER;
    &NATIVE_ALL;
    <walltime>&WALLTIME_RUN_RECENTER;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&CALC_ENSMEAN_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&CALC_ENSMEAN_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
         <and>
         <taskdep task="&RUN_RECENTER_TN;_spinup"/>
         <datadep age="00:00:00:05"><cyclestr>&FG_ROOT;/@Y@m@d@H/run_blending</cyclestr></datadep>
         </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&OBSERVER_GSI_ENSMEAN_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&OBSERVER_GSI_ENSMEAN_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&OBSERVER_GSI_ENSMEAN_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEAN</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&CALC_ENSMEAN_TN;_spinup"/>
         {%- if do_enkf_radar_ref %}
         <taskdep task="&PROCESS_RADAR_REF_TN;_spinup"/>
         {%- endif %}
         <or>
           <datadep age="02:00"><cyclestr>&OBSPATH;/@Y@m@d@H.rap.t@Hz.prepbufr.tm00</cyclestr></datadep>
           <datadep age="02:00"><cyclestr>&OBSPATH;/rap.@Y@m@d/rap.t@Hz.prepbufr.tm00</cyclestr></datadep>
         </or>
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
 <metatask name="run_ensemble_observer_spinup">
   <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}
    {%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}
    {{- fmtstr%m -}}
   {%- endfor %} </var>

  <task name="&OBSERVER_GSI_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&OBSERVER_GSI_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&OBSERVER_GSI_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&OBSERVER_GSI_ENSMEAN_TN;_spinup"/>
       </and>
    </dependency>

  </task>

  </metatask>
{%- endif %}

{%- if do_enkfupdate %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_ENKFUPDT_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANALYSIS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ENKFUPDT_TN;" &JOBSdir;/JRRFS_RUN_ENKF</command>

    &RESOURCES_RUN_ENKF;
    <walltime>&WALLTIME_RUN_ENKF;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&RUN_ENKFUPDT_TN;_spinup</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&RUN_ENKFUPDT_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>conv</value></envar>

    <dependency>
        <metataskdep metatask="run_ensemble_observer_spinup"/>
    </dependency>
  </task>

{%- endif %}

{%- if do_enkf_radar_ref %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ENKF_RADAR_REF_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANALYSIS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&ENKF_RADAR_REF_TN;" &JOBSdir;/JRRFS_RUN_ENKF</command>

    &RESOURCES_RUN_ENKF;
    <walltime>&WALLTIME_RUN_ENKF;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&ENKF_RADAR_REF_TN;_spinup</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&ENKF_RADAR_REF_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
      <and>
        <taskdep task="&RUN_ENKFUPDT_TN;_spinup"/>
        {%- if do_retro %}
        <and> 
        {%- for m in range(1, num_ens_members+1) %}
          <datadep age="00:00:00:01"><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H/mem{{ "%04d" % m }}/observer_gsi_spinup/diag_conv_dbz_ges.@Y@m@d@H.nc4.gz</cyclestr></datadep>
        {%- endfor %}
        </and> 
        {%- endif %}
      </and>
    </dependency>
  </task>

{%- endif %}

{% if do_ensemble and do_nonvar_cldanal %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>

<!--
************************************************************************
************************************************************************
-->
  <task name="&CLDANL_NONVAR_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc"  maxtries="{{ maxtries_cldanl_nonvar }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_NONVARCLDANL"</command>

    &RESOURCES_NONVAR_CLD;
    <walltime>&WALLTIME_NONVAR_CLD;</walltime>
    &NATIVE_ALL;
    &NODESIZE_ALL;

    <jobname>&TAG;_&CLDANL_NONVAR_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&CLDANL_NONVAR_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&PROCESS_BUFR_TN;_spinup"/>
        {%- if do_enkfupdate %}
        <and>
           {%- if do_enkf_radar_ref %}
             <taskdep task="&ENKF_RADAR_REF_TN;_spinup"/>
           {%- else %}
             <taskdep task="&RUN_ENKFUPDT_TN;"/>
           {%- endif %}
        </and>
        {%- elif do_envar_radar_ref and not do_envar_radar_ref_once %}
        <or>
          <and>
            <taskdep task="&POSTANAL_TN;_prod{{ uscore_ensmem_name }}"/>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
          </and>
          <and>
            <taskdep task="&HYBRID_RADAR_REF_TN;_prod"/>
            <or>    
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
            </or>   
          </and>
        </or>
        {%- else %}
        <taskdep task="&POSTANAL_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>
 </metatask>
{%- endif %}

{%- if not do_ensemble %}
{%- if do_pm_da %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_SD_GSI_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    {% if machine in ["JET", "HERA"] -%}
    <cores>{{ ncores_run_analysis }}</cores>
    <native>{{ native_run_analysis }} &RRFS_RESERVE;</native>
    {% else -%}
    <nodes>{{ nnodes_run_analysis }}:ppn={{ ppn_run_analysis }}</nodes>
    <nodesize>&NCORES_PER_NODE;</nodesize>
    {% endif -%}
    <walltime>{{ wtime_run_analysis }}</walltime>
    <jobname>&TAG;_&ANALYSIS_SD_GSI_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_SD_GSI_TN;{{ uscore_ensmem_name }}_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value><cyclestr>AERO</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
       </and>
    </dependency>

  </task>
{%- endif %}


{%- if do_dacycle %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_GSI_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ANALYSIS_GSI_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_GSI_TN;{{ uscore_ensmem_name }}_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
    <envar><name>OB_TYPE</name><value>conv_dbz</value></envar>
    {%- endif %}

    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
         <taskdep task="&PREP_CYC_TN;_spinup{{ uscore_ensmem_name }}"/>
         {%- if use_rrfse_ens %}
         {%- if do_retro %}
         <and>
             {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
             <taskdep task="&PROCESS_RADAR_REF_TN;_spinup"/>
             {%- endif %}
             <or>
               <and> 
                 <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
                 </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
               </and>
               <and> 
             {%- for h in cycl_hrs_prodstart_ens %}
               <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
               </and>
             </or>
         </and>
         {%- endif %}
         {%- endif %}
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&POSTANAL_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_postanal }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_POST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_POST_TN;" "&JOBSdir;/JRRFS_RUN_POSTANAL"</command>
    &RESOURCES_POSTANAL;
    &NATIVE_ALL;
    <walltime>&WALLTIME_POSTANAL;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&POSTANAL_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&POSTANAL_TN;{{ uscore_ensmem_name }}_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
    <envar><name>OB_TYPE</name><value>conv_dbz</value></envar>
    {%- endif %}

    <dependency>
       <taskdep task="&ANALYSIS_GSI_TN;_spinup{{ uscore_ensmem_name }}"/>
       {%- if do_pm_da %}
         <taskdep task="&ANALYSIS_SD_GSI_TN;_spinup{{ uscore_ensmem_name }}"/>
       {%- endif %}
    </dependency>

  </task>

{%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&HYBRID_RADAR_REF_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&HYBRID_RADAR_REF_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&HYBRID_RADAR_REF_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&HYBRID_RADAR_REF_TN;spinup_&TAG;@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>30</value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
       <and>
         <taskdep task="&PROCESS_RADAR_REF_TN;_spinup"/>
         <taskdep task="&ANALYSIS_GSI_TN;_spinup"/>
         <or>    
            {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
            {%- endfor %}
         </or>   
       </and>
    </dependency>

  </task>

{% endif -%}

{%- if do_gsidiag_offline %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_GSIDIAG_TN;_spinup" cycledefs="spinupcyc" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_GSIDIAG"</command>
    &RESOURCES_GSIDIAG;
    &NATIVE_ALL;
    <walltime>&WALLTIME_GSIDIAG;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ANALYSIS_GSIDIAG_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_GSIDIAG_TN;spinup_&TAG;@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&ANALYSIS_GSI_TN;_spinup"/>
{%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
         <taskdep task="&HYBRID_RADAR_REF_TN;_spinup"/>
{%- endif %}
       </and>
    </dependency>

  </task>

{%- endif %}

{% endif -%}

{%- if do_refl2tten %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RADAR_REFL2TTEN_TN;_spinup" cycledefs="spinupcyc"  maxtries="{{ maxtries_radar_ref2tten }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_REFL2TTEN"</command>
    <nodes>{{ nnodes_run_ref2tten }}:ppn={{ ppn_run_ref2tten }}</nodes>
    <walltime>{{ wtime_run_ref2tten }}</walltime>
    <memory>{{ memo_run_ref2tten }}</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&RADAR_REFL2TTEN_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&RADAR_REFL2TTEN_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&PROCESS_RADAR_REF_TN;_spinup"/>
          <taskdep task="&PROCESS_BUFR_TN;_spinup"/>
        </or>
        <taskdep task="&ANALYSIS_GSI_TN;_spinup"/>
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_jedi_envar_ioda %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&JEDI_ENVAR_IODA_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc"  maxtries="{{ maxtries_jedi_envar_ioda }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "jedienvar_ioda" "&JOBSdir;/JRRFS_JEDIENVAR_IODA"</command>
    <nodes>{{ nnodes_run_jedienvar_ioda }}:ppn={{ ppn_run_jedienvar_ioda }}</nodes>
    <walltime>{{ wtime_run_jedienvar_ioda }}</walltime>
    &NODESIZE_ALL;
    <memory>{{ memo_run_jedienvar_ioda }}</memory>
    <jobname>&TAG;_&JEDI_ENVAR_IODA_TN;_spinup</jobname>
    <join><cyclestr>&LOGDIR;/&JEDI_ENVAR_IODA_TN;_spinup_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
	<envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&ANALYSIS_GSI_TN;_spinup"/>
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_nonvar_cldanal %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&CLDANL_NONVAR_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc"  maxtries="{{ maxtries_cldanl_nonvar }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_NONVARCLDANL"</command>

    &RESOURCES_NONVAR_CLD;
    <walltime>&WALLTIME_NONVAR_CLD;</walltime>
    &NATIVE_ALL;
    &NODESIZE_ALL;

    <jobname>&TAG;_&CLDANL_NONVAR_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&CLDANL_NONVAR_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&PROCESS_BUFR_TN;_spinup"/>
        {%- if do_enkfupdate %}
        <and>
           {%- if do_enkf_radar_ref %}
             <taskdep task="&ENKF_RADAR_REF_TN;"/>
           {%- else %}
             <taskdep task="&RUN_ENKFUPDT_TN;"/>
           {%- endif %}
        </and>
        {%- elif do_envar_radar_ref and not do_envar_radar_ref_once %}
        <or>
          <and>
            <taskdep task="&POSTANAL_TN;_spinup{{ uscore_ensmem_name }}"/>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
          </and>
          <and>
	    <taskdep task="&HYBRID_RADAR_REF_TN;_spinup"/>
            <or>    
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
            </or>   
          </and>
        </or>
        {%- else %}
	<taskdep task="&POSTANAL_TN;_spinup{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>

{%- endif %}
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_FCST_TN;_spinup{{ uscore_ensmem_name }}" cycledefs="spinupcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_FCST_TN;" "&JOBSdir;/JRRFS_RUN_FCST"</command>
    &RESOURCES_FCST_SPINUP;
    <walltime>&WALLTIME_FCST_SPINUP;</walltime>
    &NATIVE_ALL;
    &NATIVE_FCST_SPINUP;
    &NODESIZE_ALL;
    <jobname>&TAG;_&RUN_FCST_TN;_spinup{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&RUN_FCST_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>1</cyclestr></value></envar>
  
    <dependency>
      {%- if do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&RADAR_REFL2TTEN_TN;_spinup"/>
        <taskdep task="&CLDANL_NONVAR_TN;_spinup"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&CLDANL_NONVAR_TN;_spinup"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&RADAR_REFL2TTEN_TN;_spinup"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
        <taskdep task="&HYBRID_RADAR_REF_TN;_spinup"/>
        {%- else  %}
        <taskdep task="&POSTANAL_TN;_spinup{{ uscore_ensmem_name }}"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        <and>
          <or>
          {%- for h in cycl_hrs_spinstart %}
            <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <or>
          {%- if do_ensinit or do_ens_blending %}
            <and>
              <datadep age="00:00:00:05"><cyclestr>&FG_ROOT;/@Y@m@d@H/run_ensinit</cyclestr></datadep>
              <taskdep task="&RUN_RECENTER_TN;_spinup"/>
            </and>
            <and>
              <datadep age="00:00:00:05"><cyclestr>&FG_ROOT;/@Y@m@d@H/run_blending</cyclestr></datadep>
              <taskdep task="&CLDANL_NONVAR_TN;_spinup_mem#mem#"/>
            </and>
          {%- else  %}
          <taskdep task="&PREP_CYC_TN;_spinup{{ uscore_ensmem_name }}"/>
          {%- endif %}
          </or>
        </and>
      {%- else %}
      <taskdep task="&PREP_CYC_TN;_spinup{{ uscore_ensmem_name }}"/>
      {%- endif %}
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&SAVE_RESTART_TN;_spinup">

    <var name="fhr"> {% for h in range(da_cycle_interval_hrs, fcst_len_hrs_spinup+da_cycle_interval_hrs, da_cycle_interval_hrs) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="&SAVE_RESTART_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&SAVE_RESTART_TN;" "&JOBSdir;/JRRFS_SAVE_RESTART"</command>
      &RESOURCES_SAVE_RESTART;
      &NATIVE_ALL;
      <walltime>&WALLTIME_SAVE_RESTART;</walltime>
      &NODESIZE_ALL;
      &MEMO_PREP_CYC;
      <jobname>&TAG;_&SAVE_RESTART_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&SAVE_RESTART_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>

{% if do_post_spinup %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&RUN_POST_TN;_spinup{{ uscore_ensmem_name }}">

    <var name="fhr"> {% for h in range(0, fcst_len_hrs_spinup+1) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="&RUN_POST_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_POST_TN;" "&JOBSdir;/JRRFS_RUN_POST"</command>
      &RESOURCES_RUN_POST;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_POST;</walltime>
      &NODESIZE_ALL;
      <jobname>&TAG;_&RUN_POST_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_POST_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <datadep age="02:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/log.atm.f#fhr#</cyclestr></datadep>
      </dependency>

    </task>
<!--
************************************************************************
************************************************************************
-->
    <task name="&RUN_PRDGEN_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#" cycledefs="spinupcyc" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PRDGEN_TN;" "&JOBSdir;/JRRFS_RUN_PRDGEN"</command>
      &RESOURCES_RUN_PRDGEN;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_PRDGEN;</walltime>
      <memory>&MEMO_RUN_PRDGEN;</memory>
      &NODESIZE_ALL;
      <jobname>&TAG;_&RUN_PRDGEN_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_PRDGEN_TN;_spinup_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>spinup</cyclestr></value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&RUN_POST_TN;_spinup{{ uscore_ensmem_name }}_f#fhr#"/>
      </dependency>

    </task>

  </metatask>
{%- endif %}

<!-- end of spinup block -->
{%- endif %}

{%- if do_ensemble %}
</metatask>
{%- endif %}

{%- endif %}  <!-- not do_ensfcst -->

<!-- beginning of prod block -->
{%- if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&PREP_CYC_PROD_TN;{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_PRE;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PREPSTART_TN;" "&JOBSdir;/JRRFS_RUN_PREPSTART"</command>
    &RESOURCES_PREP_CYC;
    &NATIVE_ALL;
    <walltime>&WALLTIME_PREP_CYC;</walltime>
    &NODESIZE_ALL;
    &MEMO_PREP_CYC;
    <jobname>&TAG;_&PREP_CYC_PROD_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&PREP_CYC_PROD_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>FG_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>LBCS_ROOT</name><value><cyclestr>&FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>

    <dependency>
     {%- if do_ensfcst %}
       <and>
         <datadep age="00:00:05:00"><cyclestr>&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/DA_OUTPUT/coupler.res</cyclestr></datadep>
         <metataskdep metatask="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}"/>
{%- if run_task_add_aerosol %}
         <taskdep task="&ADD_AEROSOL_TN;{{ uscore_ensmem_name }}"/>
{%- endif %}
       </and>
     {%- else %}
       <or>
<!-- for start product cycle -->
         <and>
           <or>
             {%- for h in cycl_hrs_prodstart %}
             <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
           </or>
{%- if do_spinup %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{% else %}
           <or>
             <and>
               <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             </and>
             <and>
               <timedep><cyclestr offset="&START_TIME_PROD;">@Y@m@d@H@M00</cyclestr></timedep>
               <or>
                 {%- for h in range(da_cycle_interval_hrs, 6+1, da_cycle_interval_hrs) %}
                 <datadep age="00:00:01:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
                 {%- endfor %}
               </or>
             </and>
           </or>
{%- endif %}
{% else %}
{%- if do_retro %}
           <and>
             <datadep age="00:00:05:00"><cyclestr>&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/ics/gfs_data.tile7.halo0.nc</cyclestr></datadep>
             <or>
             {%- for h in range(0, extrn_mdl_ics_offset_hrs+1) %}
             <datadep age="00:00:05:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/lbcs/gfs_bndy.tile7.{{ "%03d" % boundary_len_hrs }}.nc</cyclestr></datadep>
             {%- endfor %}
             </or>
           </and>
{% else %}
           <and>
             <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
             {% if do_ens_blending %}
             <taskdep task="&BLEND_ICS_TN;{{ uscore_ensmem_name }}"/>
             {% else %}
             <taskdep task="&MAKE_ICS_TN;{{ uscore_ensmem_name }}"/>
             {% endif %}
             {%- if not is_rtma %}
             <or>
               <metataskdep metatask="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}"/>
               <metataskdep metatask="&MAKE_LBCS_TN;{{ uscore_ensmem_name }}" cycle_offset="-{{ extrn_mdl_ics_offset_hrs }}:00:00"/>
             </or>
{%- if run_task_add_aerosol %}
             <taskdep task="&ADD_AEROSOL_TN;{{ uscore_ensmem_name }}"/>
{%- endif %}
             {%- endif %}
           </and>
{%- endif %}
{%- endif %}
         </and>
<!-- for continue product cycles  -->
         <and>
           {%- for h in cycl_hrs_prodstart %}
           <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
           {%- endfor %}
{%- if do_retro %}
           <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{% else %}
           <or>
             <and>
               <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
{%- if is_rtma %}
{%- if machine in ["WCOSS2"]  %}
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.fv_tracer.res.tile1.nc</cyclestr></datadep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.phy_data.nc</cyclestr></datadep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.fv_core.res.tile1.nc</cyclestr></datadep>
               <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.sfc_data.nc</cyclestr></datadep>
{%- endif %}
{%- endif %}
             </and>
             <and>
               <timedep><cyclestr offset="&START_TIME_LATE_ANALYSIS;">@Y@m@d@H@M00</cyclestr></timedep>
               <or>
                 {%- for h in range(da_cycle_interval_hrs+da_cycle_interval_hrs, 6+1, da_cycle_interval_hrs) %}
                 <datadep age="00:00:01:00"><cyclestr offset="-{{ h }}:00:00">&FG_ROOT;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
                 {%- endfor %}
               </or>
             </and>
           </or>
{%- endif %}
         </and>
       </or>
{%- endif %}
    </dependency>

  </task>

{%- if do_ensemble %}
</metatask>
{%- endif %}

{%- if not do_ensfcst %}
{%- if do_gsiobserver %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&CALC_ENSMEAN_TN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_prepstart }}">

    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_RECENTER_TN;" "&JOBSdir;/JRRFS_CALC_ENSMEAN"</command>
    &RESOURCES_RUN_RECENTER;
    &NATIVE_ALL;
    <walltime>&WALLTIME_RUN_RECENTER;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&CALC_ENSMEAN_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&CALC_ENSMEAN_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
         <and>
         {%- for m in range(1, num_ens_members+1) %}
         <taskdep task="&PREP_CYC_PROD_TN;_mem{{ "%04d" % m }}"/>
         {%- endfor %}
         </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&OBSERVER_GSI_ENSMEAN_TN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&OBSERVER_GSI_ENSMEAN_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&OBSERVER_GSI_ENSMEAN_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEAN</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&CALC_ENSMEAN_TN;"/>
         {%- if do_enkf_radar_ref %}
         <taskdep task="&PROCESS_RADAR_REF_TN;_prod"/>
         {%- endif %}
	 <or>
           <datadep age="02:00"><cyclestr>&OBSPATH;/@Y@m@d@H.{{obstype_source}}.t@Hz.prepbufr.tm00</cyclestr></datadep>
	   <datadep age="02:00"><cyclestr>&OBSPATH;/{{obstype_source}}.@Y@m@d/{{obstype_source}}.t@Hz.prepbufr.tm00</cyclestr></datadep>
	 </or>
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
 {%- if do_ensemble %}
 <metatask name="run_ensemble_observer">
   <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}
    {%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}
    {{- fmtstr%m -}}
   {%- endfor %} </var>
 {%- endif %}

  <task name="&OBSERVER_GSI_TN;{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&OBSERVER_GSI_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&OBSERVER_GSI_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>OBSERVER</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&OBSERVER_GSI_ENSMEAN_TN;"/>
       </and>
    </dependency>

  </task>

{%- if do_ensemble %}
  </metatask>
{%- endif %}
{%- endif %}

{%- if do_enkfupdate %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_ENKFUPDT_TN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANALYSIS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ENKFUPDT_TN;" &JOBSdir;/JRRFS_RUN_ENKF</command>

    &RESOURCES_RUN_ENKF;
    <walltime>&WALLTIME_RUN_ENKF;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&RUN_ENKFUPDT_TN;</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&RUN_ENKFUPDT_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>conv</value></envar>

    <dependency>
        <metataskdep metatask="run_ensemble_observer"/>
    </dependency>
  </task>

{%- endif %}

{%- if do_enkf_radar_ref %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ENKF_RADAR_REF_TN;" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_enkf }}">
    &RSRV_ENKF;
    &WALL_LIMIT_ANALYSIS;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&ENKF_RADAR_REF_TN;" &JOBSdir;/JRRFS_RUN_ENKF</command>

    &RESOURCES_RUN_ENKF;
    <walltime>&WALLTIME_RUN_ENKF;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&ENKF_RADAR_REF_TN;</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&ENKF_RADAR_REF_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
      <and>
        <taskdep task="&RUN_ENKFUPDT_TN;"/>
        {%- if do_retro %}
        <and> 
        {%- for m in range(1, num_ens_members+1) %}
          <datadep age="00:00:00:01"><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H/mem{{ "%04d" % m }}/observer_gsi/diag_conv_dbz_ges.@Y@m@d@H.nc4.gz</cyclestr></datadep>
        {%- endfor %}
        </and> 
        {%- endif %}
      </and>
    </dependency>
  </task>

{%- endif %}

{% if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>
{%- endif %}

{%- if do_dacycle %}
{%- if do_pm_da %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_SD_GSI_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSDIR;/JRRRFS_RUN_ANALYSIS"</command>

    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ANALYSIS_SD_GSI_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_SD_GSI_TN;_&TAG;{{ uscore_ensmem_name }}_prod_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>OB_TYPE</name><value><cyclestr>AERO</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
       </and>
    </dependency>

  </task>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_GSI_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>

    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ANALYSIS_GSI_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_GSI_TN;_&TAG;{{ uscore_ensmem_name }}_prod_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
    <envar><name>OB_TYPE</name><value>conv_dbz</value></envar>
    {%- endif %}

    <dependency>
       <and>
         <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
         <or>
           <datadep age="02:00"><cyclestr>&OBSPATH;/@Y@m@d@H.{{obstype_source}}.t@Hz.prepbufr.tm00</cyclestr></datadep>
           <datadep age="02:00"><cyclestr>&OBSPATH;/{{obstype_source}}.@Y@m@d/{{obstype_source}}.t@Hz.prepbufr.tm00</cyclestr></datadep>
         </or>
         <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
         {%- if use_rrfse_ens %}
         {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
         <taskdep task="&PROCESS_RADAR_REF_TN;_prod"/>
         {%- endif %}
         <or>
           {%- if do_spinup %}
            <and> 
             <or>
             {%- for h in cycl_hrs_prodstart_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
             </or>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam_spinup/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
            <and> 
             {%- for h in cycl_hrs_prodstart_ens %}
               <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
           {%- else %} 
            <and>
             {% for h in range(1, num_ens_members+1) %}
             <datadep age="00:00:01:00"><cyclestr offset="-{{ da_cycle_interval_hrs }}:00:00">&RRFSE_FG_ROOT;/@Y@m@d@H/mem{{ "%04d" % h  }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr>@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
             {%- endfor %}
            </and>
           {%- endif %} 
         </or>
         {%- endif %}
       </and>
    </dependency>

  </task>
<!--
************************************************************************
************************************************************************
-->
  <task name="&POSTANAL_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_postanal }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_POST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_POST_TN;" "&JOBSdir;/JRRFS_RUN_POSTANAL"</command>
    &RESOURCES_POSTANAL;
    &NATIVE_ALL;
    <walltime>&WALLTIME_POSTANAL;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&POSTANAL_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&POSTANAL_TN;{{ uscore_ensmem_name }}_prod_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    {%- if do_envar_radar_ref and do_envar_radar_ref_once %}
    <envar><name>OB_TYPE</name><value>conv_dbz</value></envar>
    {%- endif %}

    <dependency>
       <taskdep task="&ANALYSIS_GSI_TN;_prod{{ uscore_ensmem_name }}"/>
       {%- if do_pm_da %}
         <taskdep task="&ANALYSIS_SD_GSI_TN;_prod{{ uscore_ensmem_name }}"/>
       {%- endif %}
    </dependency>

  </task>

{%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&HYBRID_RADAR_REF_TN;_prod" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_ANALYSIS;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&HYBRID_RADAR_REF_TN;" "&JOBSdir;/JRRFS_RUN_ANALYSIS"</command>
    &RESOURCES_ANALYSIS_GSI;
    &NATIVE_ANALYSIS_GSI;
    <walltime>&WALLTIME_ANALYSIS_GSI;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&HYBRID_RADAR_REF_TN;_prod</jobname>
    <join><cyclestr>&LOGDIR;/&HYBRID_RADAR_REF_TN;_prod_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>RRFSE_FG_ROOT</name><value><cyclestr>&RRFSE_FG_ROOT;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>
    <envar><name>nens</name><value>30</value></envar>
    <envar><name>OB_TYPE</name><value>radardbz</value></envar>

    <dependency>
       <and>
         <taskdep task="&PROCESS_RADAR_REF_TN;_prod"/>
         <taskdep task="&ANALYSIS_GSI_TN;_prod"/>
         <or>    
            {%- for h in cycl_hrs_hyb_fv3lam_ens %}
               <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
            {%- endfor %}
         </or>   
       </and>
    </dependency>

  </task>

{% endif -%}

{%- if do_gsidiag_offline %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ANALYSIS_GSIDIAG_TN;_prod" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_analysis_gsi }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_RUN_GSIDIAG"</command>
    &RESOURCES_GSIDIAG;
    &NATIVE_ALL;
    <walltime>&WALLTIME_GSIDIAG;</walltime>
    &NODESIZE_ALL;
    <jobname>&TAG;_&ANALYSIS_GSIDIAG_TN;_prod</jobname>
    <join><cyclestr>&LOGDIR;/&ANALYSIS_GSIDIAG_TN;prod_&TAG;@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>GSI_TYPE</name><value><cyclestr>ANALYSIS</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr></cyclestr></value></envar>
    <envar><name>SATBIAS_DIR</name><value><cyclestr>&NWGES_BASEDIR;/satbias</cyclestr></value></envar>

    <dependency>
       <and>
         <taskdep task="&ANALYSIS_GSI_TN;_prod"/>
{%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
         <taskdep task="&HYBRID_RADAR_REF_TN;_prod"/>
{%- endif %}
       </and>
    </dependency>

  </task>

{%- endif %}

{% endif -%}

{%- if do_refl2tten %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RADAR_REFL2TTEN_TN;_prod" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_radar_ref2tten }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_REFL2TTEN"</command>
    <nodes>{{ nnodes_run_ref2tten }}:ppn={{ ppn_run_ref2tten }}</nodes>
    <walltime>{{ wtime_run_ref2tten }}</walltime>
    <memory>{{ memo_run_ref2tten }}</memory>
    &NODESIZE_ALL;
    <jobname>&TAG;_&RADAR_REFL2TTEN_TN;_prod</jobname>
    <join><cyclestr>&LOGDIR;/&RADAR_REFL2TTEN_TN;_prod_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <or>
          <taskdep task="&PROCESS_RADAR_REF_TN;_prod"/>
          <taskdep task="&PROCESS_BUFR_TN;_prod"/>
        </or>
        <taskdep task="&ANALYSIS_GSI_TN;_prod"/>
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_jedi_envar_ioda %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&JEDI_ENVAR_IODA_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_jedi_envar_ioda }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "jedienvar_ioda" "&JOBSdir;/JRRFS_JEDIENVAR_IODA"</command>
    <nodes>{{ nnodes_run_jedienvar_ioda }}:ppn={{ ppn_run_jedienvar_ioda }}</nodes>
    <walltime>{{ wtime_run_jedienvar_ioda }}</walltime>
    &NODESIZE_ALL;
    <memory>{{ memo_run_jedienvar_ioda }}</memory>
    <jobname>&TAG;_&JEDI_ENVAR_IODA_TN;_prod</jobname>
    <join><cyclestr>&LOGDIR;/&JEDI_ENVAR_IODA_TN;_prod_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&ANALYSIS_GSI_TN;_prod"/>
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_nonvar_cldanal %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long"  maxtries="{{ maxtries_cldanl_nonvar }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_ANALYSIS;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_ANALYSIS_TN;" "&JOBSdir;/JRRFS_NONVARCLDANL"</command>

    &RESOURCES_NONVAR_CLD;
    <walltime>&WALLTIME_NONVAR_CLD;</walltime>
    {%- if is_rtma %}
    {%- if machine in ["WCOSS2"]  %}
    &NATIVE_NONVAR_CLD;
    {%- else %}
    &NATIVE_ALL;
    {%- endif %}
    {%- else %}
    &NATIVE_ALL;
    {%- endif %}
    &NODESIZE_ALL;

    <jobname>&TAG;_&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&CLDANL_NONVAR_TN;_prod_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>MEM_TYPE</name><value><cyclestr>MEMBER</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>

    <dependency>
      <and>
        <taskdep task="&PROCESS_BUFR_TN;_prod"/>
        {%- if do_enkfupdate %}
        <and>
           {%- if do_enkf_radar_ref %}
             <taskdep task="&ENKF_RADAR_REF_TN;"/>
           {%- else %}
             <taskdep task="&RUN_ENKFUPDT_TN;"/>
           {%- endif %}
        </and>
        {%- elif do_envar_radar_ref and not do_envar_radar_ref_once %}
        <or>
          <and>
            <taskdep task="&POSTANAL_TN;_prod{{ uscore_ensmem_name }}"/>
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
             {%- endfor %}
          </and>
          <and>
	    <taskdep task="&HYBRID_RADAR_REF_TN;_prod"/>
            <or>    
             {%- for h in cycl_hrs_hyb_fv3lam_ens %}
                <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
             {%- endfor %}
            </or>   
          </and>
        </or>
        {%- else %}
	<taskdep task="&POSTANAL_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- endif %}
      </and>
    </dependency>

  </task>

{%- endif %}

{%- if do_ensemble %}
 </metatask>
{%- endif %}
{%- endif %}

{%- if do_recenter %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_RECENTER_TN;" cycledefs="recentercyc" maxtries="{{ maxtries_recenter }}">
    &RSRV_ENKF;
    &WALL_LIMIT_RECENTER;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_RECENTER_TN;" &JOBSdir;/JRRFS_RUN_RECENTER</command>
    &RESOURCES_RUN_RECENTER;
    &NATIVE_ALL;
    <walltime>&WALLTIME_RUN_RECENTER;</walltime>
    &NODESIZE_ALL;
    <jobname><cyclestr>&TAG;_&RUN_RECENTER_TN;</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/&RUN_RECENTER_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>
    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>

    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_ROOT</name><value><cyclestr>&CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_DIR</name><value><cyclestr>&ENSCTRL_CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>ENSCTRL_CYCLE_ROOT</name><value><cyclestr>&ENSCTRL_CYCLE_BASEDIR;</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>ENSCTRL_NWGES_DIR</name><value><cyclestr>&ENSCTRL_NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>

    <dependency>
        {%- if do_ensfcst %}
          <and>
          {%- for m in range(1, num_ens_members+1) %}
            <taskdep task="&PREP_CYC_TN;_prod_mem{{ "%04d" % m }}"/>
          {%- endfor %}
            <datadep age="00:00:05:00"><cyclestr>&ENSCTRL_NWGES_BASEDIR;/@Y@m@d@H/fcst_fv3lam/INPUT/coupler.res</cyclestr></datadep>
          </and>
        {%- else %}
         <and>
          {%- if do_nonvar_cldanal %}
          <and>
          {%- for m in range(1, num_ens_members+1) %}
            <taskdep task="&CLDANL_NONVAR_TN;_prod_mem{{ "%04d" % m }}"/>
          {%- endfor %}
          </and>
          {%- elif do_enkf_radar_ref %}
          <taskdep task="&ENKF_RADAR_REF_TN;"/>
          {%- elif do_enkfupdate %}
          <taskdep task="&RUN_ENKFUPDT_TN;"/>
          {%- endif %}
          <or>
          <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/@H/nonvarcldanl_complete.txt</cyclestr></datadep>
          <datadep age="00:00:00:05"><cyclestr>&ENSCTRL_COMOUT_DIR;/@H_spinup/nonvarcldanl_complete.txt</cyclestr></datadep>
          </or>
         </and>
        {% endif %}
    </dependency>
  </task>

{%- endif %}

{%- if do_save_da_output and do_ensemble %}
<!--
************************************************************************
************************************************************************
-->
 <metatask name="save_ensda_output">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members_fcst+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>

  <task name="&SAVE_DA_OUTPUT_TN;_prod{{ uscore_ensmem_name }}" cycledefs="savedacyc" maxtries="{{ maxtries_save_da_output }}">

    &RSRV_DEFAULT;
    &WALL_LIMIT_SAVE_RESTART;
    <command>&LOAD_MODULES_RUN_TASK_FP; "&SAVE_RESTART_TN;" "&JOBSdir;/JRRFS_SAVE_DA_OUTPUT"</command>
    <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
    <walltime>{{ wtime_save_restart }}</walltime>
    &NODESIZE_ALL;
    <memory>{{ memo_save_da_output }}</memory>
    <jobname>&TAG;_&SAVE_DA_OUTPUT_TN;{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&SAVE_DA_OUTPUT_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    {%- if do_ensfcst %}
    <envar><name>CYCLE_TYPE</name><value><cyclestr>enfcst</cyclestr></value></envar>
    {%- else %}
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    {%- endif %}

    <dependency>
    {%- if do_ensfcst %}
          <taskdep task="&RUN_RECENTER_TN;"/>
    {%- else %}
       {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <taskdep task="&RUN_RECENTER_TN;"/>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&ENKF_RADAR_REF_TN;"/>
        {%- elif do_enkfupdate %}
        <taskdep task="&RUN_ENKFUPDT_TN;"/>
       {%- endif %}
    {%- endif %}
    </dependency>

  </task>
 </metatask>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
{% if do_ensemble %}
 <metatask name="run_ensemble">
  <var name="{{ ensmem_indx_name }}">
    {%- for m in range(1, num_ens_members+1) -%}{%- set fmtstr=" %0"~ndigits_ensmem_names~"d" -%}{{- fmtstr%m -}}{%- endfor %} </var>
{%- endif %}
  <task name="&RUN_FCST_TN;_prod{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_FCST_TN;" "&JOBSdir;/JRRFS_RUN_FCST"</command>

    &RESOURCES_FCST_PROD;
    <walltime>&WALLTIME_FCST_PROD;</walltime>
    &NATIVE_ALL;
    &NATIVE_FCST_PROD;
    &NODESIZE_ALL;
    <jobname>&TAG;_&RUN_FCST_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&RUN_FCST_TN;_prod_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>{{ restart_hrs_prod }}</cyclestr></value></envar>
  
    <dependency>
      {%- if do_ensfcst %}
        {%- if do_recenter %}
          <taskdep task="&RUN_RECENTER_TN;"/>
        {%- else %}
          <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- endif %}
      {%- else %}
      {%- if do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&RADAR_REFL2TTEN_TN;_prod"/>
        <taskdep task="&CLDANL_NONVAR_TN;_prod"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&CLDANL_NONVAR_TN;_prod"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&RADAR_REFL2TTEN_TN;_prod"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
        <taskdep task="&HYBRID_RADAR_REF_TN;_prod"/>
        {%- else  %}
        <taskdep task="&POSTANAL_TN;_prod"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <taskdep task="&RUN_RECENTER_TN;"/>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&ENKF_RADAR_REF_TN;"/>
        {%- else %}
        <taskdep task="&RUN_ENKFUPDT_TN;"/>
       {%- endif %}
      {%- else %}
      <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
      {%- endif %}
      {%- endif %}
    </dependency>

  </task>

<!-- ******************************************************************* -->
  <task name="&RUN_FCST_TN;_prod_long{{ uscore_ensmem_name }}" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_fcst }}">

    &RSRV_FCST;
    &WALL_LIMIT_FCST;

    <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_FCST_TN;" "&JOBSdir;/JRRFS_RUN_FCST"</command>

    &RESOURCES_FCST_PROD;
    <walltime>&WALLTIME_FCST_PROD_LONG;</walltime>
    &NATIVE_ALL;
    &NATIVE_FCST_PROD;
    &NODESIZE_ALL;
    <jobname>&TAG;_&RUN_FCST_TN;_prod{{ uscore_ensmem_name }}</jobname>
    <join><cyclestr>&LOGDIR;/&RUN_FCST_TN;_prod_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>HH</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
    <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value>&NWGES_BASEDIR;</value></envar>
    <envar><name>RESTART_HRS</name><value><cyclestr>{{ restart_hrs_prod_long }}</cyclestr></value></envar>
  
    <dependency>
      {%- if do_dacycle and do_refl2tten and do_nonvar_cldanal%}
      <and>
        <taskdep task="&RADAR_REFL2TTEN_TN;_prod"/>
        <taskdep task="&CLDANL_NONVAR_TN;_prod"/>
      </and>
      {%- elif do_dacycle and do_nonvar_cldanal%}
      <taskdep task="&CLDANL_NONVAR_TN;_prod"/>
      {%- elif do_dacycle and do_refl2tten%}
      <taskdep task="&RADAR_REFL2TTEN_TN;_prod"/>
      {%- elif do_dacycle %}
        {%- if do_envar_radar_ref and not do_envar_radar_ref_once %}
        <taskdep task="&HYBRID_RADAR_REF_TN;_prod"/>
        {%- else  %}
        <taskdep task="&POSTANAL_TN;_prod"/>
        {%- endif %}
      {%- elif do_enkfupdate or do_enkf_radar_ref %}
        {%- if do_recenter %}
        <or>
         <and>
          <or>
          {%- for h in cycl_hrs_recenter %}
          <streq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></streq>
          {%- endfor %}
          </or>
          <taskdep task="&RUN_RECENTER_TN;"/>
         </and>
         <and>
          {%- for h in cycl_hrs_recenter %}
          <strneq><left>{{ h }}</left><right><cyclestr>@H</cyclestr></right></strneq>
          {%- endfor %}
          <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
         </and>
        </or>
        {%- elif do_nonvar_cldanal%}
        <taskdep task="&CLDANL_NONVAR_TN;_prod{{ uscore_ensmem_name }}"/>
        {%- elif do_enkf_radar_ref %}
        <taskdep task="&ENKF_RADAR_REF_TN;"/>
        {%- else %}
        <taskdep task="&RUN_ENKFUPDT_TN;"/>
       {%- endif %}
      {%- else %}
      <taskdep task="&PREP_CYC_TN;_prod{{ uscore_ensmem_name }}"/>
      {%- endif %}
    </dependency>

  </task>

{%- if not do_ensfcst %}
{%- if not is_rtma %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&SAVE_RESTART_TN;_prod">

    <var name="fhr"> {{ restart_hrs_prod }} </var>

    <task name="&SAVE_RESTART_TN;_prod{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&SAVE_RESTART_TN;" "&JOBSdir;/JRRFS_SAVE_RESTART"</command>
      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      &NODESIZE_ALL;
      &MEMO_PREP_CYC;
      <jobname>&TAG;_&SAVE_RESTART_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&SAVE_RESTART_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SURFACE_DIR</name><value><cyclestr>&NWGES_BASEDIR;/surface</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>
  <metatask name="&SAVE_RESTART_TN;_prod_long">

    <var name="fhr"> {{ restart_hrs_prod_long }} </var>

    <task name="&SAVE_RESTART_TN;_prod_long{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc_long" maxtries="{{ maxtries_save_restart }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_SAVE_RESTART;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&SAVE_RESTART_TN;" "&JOBSdir;/JRRFS_SAVE_RESTART"</command>
      <nodes>{{ nnodes_save_restart }}:ppn={{ ppn_save_restart }}</nodes>
      <walltime>{{ wtime_save_restart }}</walltime>
      &NODESIZE_ALL;
      &MEMO_PREP_CYC;
      <jobname>&TAG;_&SAVE_RESTART_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&SAVE_RESTART_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SURFACE_DIR</name><value><cyclestr>&NWGES_BASEDIR;/surface</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>CYCLE_TYPE</name><value><cyclestr>prod</cyclestr></value></envar>

      <dependency>
        <and>
          <timedep><cyclestr offset="&START_TIME_CONVENTIONAL;">@Y@m@d@H@M00</cyclestr></timedep>
          <or>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/coupler.res</cyclestr></datadep>
            <datadep age="00:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/RESTART/</cyclestr><cyclestr offset="#fhr#:00:00">@Y@m@d.@H0000.coupler.res</cyclestr></datadep>
          </or>
        </and>
      </dependency>

    </task>

  </metatask>
{%- endif %}
{%- endif %}

{%- if do_post_prod %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="&RUN_POST_TN;{{ uscore_ensmem_name }}">

{%- if postproc_nsout_min > 0 %}
  {%- if postproc_nfhmax_hrs < postproc_len_hrs %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}  {% for h in range(postproc_nsout_min, postproc_nfhmax_hrs*60, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} 
                               {%- for h in range(postproc_nfhmax_hrs, postproc_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d-00-00 " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_len_hrs*60+1, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} </var>
  {%- endif %}
{%- else %}
  {%- if postproc_nfhmax_hrs < postproc_len_hrs %}
    <var name="fhr"> {% for h in range(0, postproc_nfhmax_hrs,postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %}
                     {%- for h in range(postproc_nfhmax_hrs, postproc_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {% for h in range(0, postproc_len_hrs+1, postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %} </var>
  {%- endif %}
{%- endif %}

    <task name="&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_POST_TN;" "&JOBSdir;/JRRFS_RUN_POST"</command>
      &RESOURCES_RUN_POST;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_POST;</walltime>
      &NODESIZE_ALL;
      <jobname>&TAG;_&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_POST_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
          <datadep age="01:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/log.atm.f#fhr#</cyclestr></datadep>
      </dependency>

    </task>
  </metatask>

  <metatask name="&RUN_POST_TN;{{ uscore_ensmem_name }}_long">

{%- if postproc_nsout_min > 0 %}
  {%- if postproc_nfhmax_hrs < postproc_long_len_hrs %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_nfhmax_hrs*60, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} 
                               {%- for h in range(postproc_nfhmax_hrs, postproc_long_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d-00-00 " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_long_len_hrs*60+1, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} </var>
  {%- endif %}
{%- else %}
  {%- if postproc_nfhmax_hrs < postproc_long_len_hrs %}
    <var name="fhr"> {% for h in range(0, postproc_nfhmax_hrs,postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %}
                     {%- for h in range(postproc_nfhmax_hrs, postproc_long_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {% for h in range(0, postproc_long_len_hrs+1, postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %} </var>
  {%- endif %}
{%- endif %}

    <task name="&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#_long" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_POST;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_POST_TN;" "&JOBSdir;/JRRFS_RUN_POST"</command>
      &RESOURCES_RUN_POST;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_POST;</walltime>
      &NODESIZE_ALL;
      <jobname>&TAG;_&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_POST_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
         <datadep age="01:30"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/log.atm.f#fhr#</cyclestr></datadep>
      </dependency>

    </task>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
<metatask name="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}">

{%- if postproc_nsout_min > 0 %}
  {%- if postproc_nfhmax_hrs < postproc_len_hrs %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_nfhmax_hrs*60, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} 
                               {%- for h in range(postproc_nfhmax_hrs, postproc_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d-00-00 " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_len_hrs*60+1, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} </var>
  {%- endif %}
{%- else %}
  {%- if postproc_nfhmax_hrs < postproc_len_hrs %}
    <var name="fhr"> {% for h in range(0, postproc_nfhmax_hrs,postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %}
                     {%- for h in range(postproc_nfhmax_hrs, postproc_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {% for h in range(0, postproc_len_hrs+1,postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %} </var>
  {%- endif %}
{%- endif %}

    <task name="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f#fhr#" cycledefs="prodcyc" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PRDGEN_TN;" "&JOBSdir;/JRRFS_RUN_PRDGEN"</command>
      &RESOURCES_RUN_PRDGEN;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_PRDGEN;</walltime>
      &NODESIZE_ALL;
      <memory>&MEMO_RUN_PRDGEN;</memory>
      <jobname>&TAG;_&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_PRDGEN_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#"/>
      </dependency>

    </task>
  </metatask>

<metatask name="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_long">

{%- if postproc_nsout_min > 0 %}
  {%- if postproc_nfhmax_hrs < postproc_long_len_hrs %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_nfhmax_hrs*60, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} 
                               {%- for h in range(postproc_nfhmax_hrs, postproc_long_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d-00-00 " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }} {% for h in range(postproc_nsout_min, postproc_long_len_hrs*60+1, postproc_nsout_min) %}{{ " %03d-%02d-00 " % ( h//60,h-(h//60)*60 )  }}{% endfor %} </var>
  {%- endif %}
{%- else %}
  {%- if postproc_nfhmax_hrs < postproc_long_len_hrs %}
    <var name="fhr"> {% for h in range(0, postproc_nfhmax_hrs,postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %}
                     {%- for h in range(postproc_nfhmax_hrs, postproc_long_len_hrs+1, postproc_nfhout_hrs) %}{{ " %03d " % h }}{% endfor %} </var> 
  {%- else %}
    <var name="fhr"> {% for h in range(0, postproc_long_len_hrs+1, postproc_nfhout_hf_hrs) %}{{ " %03d" % h  }}{% endfor %} </var>
  {%- endif %}
{%- endif %}

    <task name="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f#fhr#_long" cycledefs="prodcyc_long" maxtries="{{ maxtries_run_prdgen }}">

      &RSRV_PRDGEN;
      &WALL_LIMIT_POST;
      <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_PRDGEN_TN;" "&JOBSdir;/JRRFS_RUN_PRDGEN"</command>
      &RESOURCES_RUN_PRDGEN;
      &NATIVE_ALL;
      <walltime>&WALLTIME_RUN_PRDGEN;</walltime>
      &NODESIZE_ALL;
      <memory>&MEMO_RUN_PRDGEN;</memory>
      <jobname>&TAG;_&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f#fhr#</jobname>
      <join><cyclestr>&LOGDIR;/&RUN_PRDGEN_TN;_&TAG;{{ uscore_ensmem_name }}_f#fhr#_@Y@m@d@H.log</cyclestr></join>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>TMMARK</name><value>tm00</value></envar>

      <dependency>
        <taskdep task="&RUN_POST_TN;{{ uscore_ensmem_name }}_f#fhr#_long"/>
      </dependency>

    </task>
  </metatask>
{%- endif %}

{% if do_bufrsnd %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&RUN_BUFRSND_TN;_long" cycledefs="prodcyc_long" maxtries="1">

        &RSRV_POST;
        &WALL_LIMIT_BUFRSND;
        <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_BUFRSND_TN;" "&JOBSdir;/JRRFS_BUFRSND"</command>
        &RESOURCES_RUN_BUFRSND;
        <walltime>{{ wtime_run_bufrsnd }}</walltime>
        &NODESIZE_ALL;
        <jobname>&TAG;_&RUN_BUFRSND_TN;</jobname>
        <join><cyclestr>&LOGDIR;/&RUN_BUFRSND_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
        <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
        <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
        <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr></cyclestr></value></envar>
        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>TMMARK</name><value>tm00</value></envar>

        <dependency>
{%- if postproc_nsout_min > 0 %}
          <datadep age="00:02"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H/fcst_fv3lam/log.atm.f000-00-36</cyclestr></datadep>
{%- else %}
          <datadep age="00:02"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H/fcst_fv3lam/log.atm.f000</cyclestr></datadep>
{%- endif %}
        </dependency>

  </task>

  {%- if do_ensfcst or is_rtma %}
  <task name="&RUN_BUFRSND_TN;{{ uscore_ensmem_name }}" cycledefs="prodcyc" maxtries="1">

        &RSRV_POST;
        &WALL_LIMIT_BUFRSND;
        <command>&LOAD_MODULES_RUN_TASK_FP; "&RUN_BUFRSND_TN;" "&JOBSdir;/JRRFS_BUFRSND"</command>
        &RESOURCES_RUN_BUFRSND;
        <walltime>{{ wtime_run_bufrsnd }}</walltime>
        &NODESIZE_ALL;
	<jobname>&TAG;_&RUN_BUFRSND_TN;{{ uscore_ensmem_name }}</jobname>
	<join><cyclestr>&LOGDIR;/&RUN_BUFRSND_TN;_&TAG;{{ uscore_ensmem_name }}_@Y@m@d@H.log</cyclestr></join>

        <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
        <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
        <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
        <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
        <envar><name>NWGES_DIR</name><value><cyclestr>&NWGES_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>
	<envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
	<envar><name>ENSMEM_INDX</name><value><cyclestr>#{{ ensmem_indx_name }}#</cyclestr></value></envar>

        <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
        <envar><name>TMMARK</name><value>tm00</value></envar>

        <dependency>
	<datadep age="00:02"><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H{{ slash_ensmem_subdir }}/fcst_fv3lam/log.atm.f000</cyclestr></datadep>
        </dependency>

  </task>
  {%- endif %}

{%- endif %}

{%- if machine in ["JET", "HERA"]  %}
{%- if not do_ensemble %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="python_maps">

    <var name="tilelabel"> {{ tilelabels }} </var>
    <var name="tileset"> {{ tilesets }} </var>
    <task name="python_maps{{ uscore_ensmem_name }}_#tilelabel#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_GRAPHICS;
      &WALL_LIMIT_GRAPHICS;

      <walltime>{{ wtime_run_fcst_long }}</walltime>
      <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
      <jobname><cyclestr>&TAG;_python{{ uscore_ensmem_name }}_@H_#tilelabel#</cyclestr></jobname>
      <join><cyclestr>&LOGDIR;/python_&TAG;{{ uscore_ensmem_name }}_#tilelabel#.log</cyclestr></join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JRRFS_RUN_PYTHON_GRAPHICS"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>GRAPHICS_TYPE</name><value>maps</value></envar>
      <envar><name>TILES</name><value>#tileset#</value></envar>
      <envar><name>TILELABEL</name><value>#tilelabel#</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <or>
{%- if postproc_nsout_min > 0 %}
          <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}"/>
          <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}_long"/>
{%- else %}
          <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f000"/>
          <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f000_long"/>
{%- endif %}
        </or>
      </dependency>
    </task>
  </metatask>
<!--
************************************************************************
************************************************************************
-->
  <task name="python_skewts{{ uscore_ensmem_name }}" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

    &RSRV_GRAPHICS;
    &WALL_LIMIT_GRAPHICS;

    <walltime>{{ wtime_run_fcst_long }}</walltime>
    <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
    <jobname><cyclestr>&TAG;_python{{ uscore_ensmem_name }}_@H_skewts</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/python_skewts_&TAG;{{ uscore_ensmem_name }}_@H.log</cyclestr></join>
    <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JRRFS_RUN_PYTHON_GRAPHICS"</command>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>GRAPHICS_TYPE</name><value>skewts</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

    <dependency>
      <or>
{%- if postproc_nsout_min > 0 %}
        <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}"/>
        <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}_long"/>
{%- else %}
        <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f000"/>
        <taskdep task="&RUN_PRDGEN_TN;{{ uscore_ensmem_name }}_f000_long"/>
{%- endif %}
      </or>
    </dependency>
  </task>

{%- endif %}
{%- endif %}

{%- if do_ensemble %}
  </metatask>
{%- endif %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&CLEAN_TN;" cycledefs="prodcyc" maxtries="{{ maxtries_run_post }}">

    &RSRV_POST;

    <command>&JOBSdir;/../scripts/exrrfs_clean.ksh</command>
    <nodes> 1:ppn=1</nodes>
    <walltime>00:15:00</walltime>
    <jobname>&TAG;_&CLEAN_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&CLEAN_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>LOGDIR</name><value>&LOGDIR;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>NWGES_BASEDIR</name><value><cyclestr>&NWGES_BASEDIR;</cyclestr></value></envar>
{%- if do_ensemble %}
    <envar><name>nens</name><value><cyclestr>{{ num_ens_members }}</cyclestr></value></envar>
{%- else %}
    <envar><name>nens</name><value><cyclestr>0</cyclestr></value></envar>
{%- endif %}


  </task>

{%- if machine in ["JET", "HERA"]  %}

{%- if do_ensemble %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ARCHIVE_TN;_ens" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&JOBSdir;/../scripts/exrrfs_archive_ens.ksh</command>
    <nodes> 1:ppn=1</nodes>
    <walltime>23:00:00</walltime>
    <memory>24G</memory>
    <jobname>&TAG;_&ARCHIVE_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&ARCHIVE_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>nens</name><value>{{ num_ens_members }}</value></envar>

  </task>

{%- else %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ARCHIVE_TN;" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&JOBSdir;/../scripts/exrrfs_archive.ksh</command>
    <nodes> 1:ppn=1</nodes>
    <walltime>08:00:00</walltime>
    <memory>80G</memory>
    <jobname>&TAG;_&ARCHIVE_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&ARCHIVE_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>CYCLE_DIR</name><value><cyclestr>&CYCLE_BASEDIR;/@Y@m@d@H</cyclestr></value></envar>

    <dependency>
       <or>
         <and>
           <metataskdep metatask="python_maps"/>
           <taskdep task="python_skewts"/>
         </and>

         <and>
{%- if postproc_nsout_min > 0 %}
           <taskdep task="&RUN_PRDGEN_TN;_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}"/>
{%- else %}
           <taskdep task="&RUN_PRDGEN_TN;_f000"/>
{%- endif %}
           <metataskdep metatask="python_maps" state="Dead"/>
           <taskdep task="python_skewts" state="Dead"/>
         </and>
       </or>
    </dependency>
  </task>
{%- endif %}
{%- endif %}

{%- if machine in ["WCOSS2"]  %}
<!--
************************************************************************
************************************************************************
-->
  <task name="&ARCHIVE_TN;" cycledefs="archive" maxtries="{{ maxtries_run_post }}">

    &RSRV_HPSS;

    <command>&JOBSdir;/../scripts/exrrfs_archive_emc.ksh</command>
    <nodes>1:ppn=1</nodes>
    <walltime>08:00:00</walltime>
    <jobname>&TAG;_&ARCHIVE_TN;</jobname>
    <join><cyclestr>&LOGDIR;/&ARCHIVE_TN;_&TAG;_@Y@m@d@H.log</cyclestr></join>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>

    <dependency>
       <or>
          <and>
            <or>
             <streq><left>00</left><right><cyclestr>@H</cyclestr></right></streq>
             <streq><left>12</left><right><cyclestr>@H</cyclestr></right></streq>
            </or>
            <taskdep task="&RUN_PRDGEN_TN;_f060"/>
          </and>
          <and>
            <strneq><left>00</left><right><cyclestr>@H</cyclestr></right></strneq>
            <strneq><left>12</left><right><cyclestr>@H</cyclestr></right></strneq>
            <taskdep task="&RUN_PRDGEN_TN;_f003"/>
          </and>
       </or>
    </dependency>

  </task>
{%- endif %}

{% if do_ensemble and do_ens_graphics %}
{%- if machine in ["JET", "HERA"] %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="ensemble_maps">

    <var name="tilelabel"> {{ tilelabels }} </var>
    <var name="tileset"> {{ tilesets }} </var>
    <task name="python_maps_#tilelabel#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_GRAPHICS;
      &WALL_LIMIT_GRAPHICS;

      <walltime>{{ wtime_run_fcst }}</walltime>
      <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
      <jobname><cyclestr>&TAG;_python_@H_#tilelabel#</cyclestr></jobname>
      <join><cyclestr>&LOGDIR;/python_&TAG;_#tilelabel#.log</cyclestr></join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JRRFS_RUN_PYTHON_GRAPHICS"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
      <envar><name>GRAPHICS_TYPE</name><value>enspanel</value></envar>
      <envar><name>TILES</name><value>#tileset#</value></envar>
      <envar><name>TILELABEL</name><value>#tilelabel#</value></envar>
      <envar><name>ALL_LEADS</name><value>FALSE</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <and>
          <sh>find <cyclestr>&ENSCTRL_COMOUT_DIR;/@H/&NET;.t@Hz.natlev.f000*grib2</cyclestr> -mmin +5 </sh>
{%- if postproc_nsout_min > 0 %}
          {%- for m in range(1, 10) %}
          <taskdep task="&RUN_PRDGEN_TN;_mem{{ "%04d" % m }}_f{{ "000-%02d-%02d" % ( dt_atmos//60,dt_atmos%60 )  }}"/>
          {%- endfor %}
{%- else %}
          {%- for m in range(1, 10) %}
          <taskdep task="&RUN_PRDGEN_TN;_mem{{ "%04d" % m }}_f000"/>
          {%- endfor %}
{%- endif %}
        </and>
      </dependency>
    </task>
  </metatask>

{%- endif %}
{%- endif %}

{%- if do_ensemble and do_ensfcst and do_enspost %}
<!--
************************************************************************
************************************************************************
-->
  <metatask name="enspost">
    <var name="fhr"> {% for h in range(0, postproc_len_hrs+1) %}{{ " %03d" % h  }}{% endfor %} </var>

    <task name="enspost_#fhr#" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

      &RSRV_DEFAULT;
      &WALL_LIMIT_POST;

      <walltime>{{ wtime_run_enspost }}</walltime>
      <nodes>{{ nnodes_run_enspost }}:ppn={{ ppn_run_enspost }}</nodes>
      <jobname><cyclestr>&TAG;_enspost_@H_#fhr#</cyclestr></jobname>
      <join><cyclestr>&LOGDIR;/enspost_&TAG;_f#fhr#_@Y@m@d@H.log</cyclestr></join>
      <command>&LOAD_MODULES_RUN_TASK_FP; "run_enspost" "&JOBSdir;/JRRFS_RUN_ENSPOST"</command>

      <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
      <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
      <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
      <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
      <envar><name>fhr</name><value>#fhr#</value></envar>
      <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>

      <dependency>
        <and>
          <sh>find <cyclestr>&ENSCTRL_COMOUT_DIR;/@H/&NET;.t@Hz.natlev.f#fhr#*grib2</cyclestr> -mmin +5 </sh>
          {%- for m in range(1, num_ens_members_fcst+1) %}
          <taskdep task="&RUN_PRDGEN_TN;_mem{{ "%04d" % m }}_f#fhr#"/>
          {%- endfor %}
        </and>
      </dependency>
    </task>
  </metatask>

{% if machine in ["JET", "HERA"] %}
<!--
************************************************************************
************************************************************************
-->
  <task name="python_enspost_maps" cycledefs="prodcyc,prodcyc_long" maxtries="{{ maxtries_run_post }}">

    &RSRV_GRAPHICS;
    &WALL_LIMIT_GRAPHICS;

    <walltime>{{ wtime_run_enspost }}</walltime>
    <nodes>{{ nnodes_run_graphics }}:ppn={{ ppn_run_graphics }}</nodes>
    <jobname><cyclestr>&TAG;_python_@H_enspost_maps</cyclestr></jobname>
    <join><cyclestr>&LOGDIR;/python_enspost_maps_&TAG;.log</cyclestr></join>
    <command>&LOAD_MODULES_RUN_TASK_FP; "run_graphics" "&JOBSdir;/JRRFS_RUN_PYTHON_GRAPHICS"</command>

    <envar><name>GLOBAL_VAR_DEFNS_FP</name><value>&GLOBAL_VAR_DEFNS_FP;</value></envar>
    <envar><name>CDATE</name><value><cyclestr>@Y@m@d@H</cyclestr></value></envar>
    <envar><name>PDY</name><value><cyclestr>@Y@m@d</cyclestr></value></envar>
    <envar><name>cyc</name><value><cyclestr>@H</cyclestr></value></envar>
    <envar><name>SLASH_ENSMEM_SUBDIR</name><value><cyclestr>{{ slash_ensmem_subdir }}</cyclestr></value></envar>
    <envar><name>GRAPHICS_TYPE</name><value>maps</value></envar>
    <envar><name>TILES</name><value>full</value></envar>
    <envar><name>TILELABEL</name><value>full</value></envar>
    <envar><name>ALL_LEADS</name><value>FALSE</value></envar>
    <envar><name>ENSCTRL_COMOUT_BASEDIR</name><value>&ENSCTRL_COMOUT_BASEDIR;</value></envar>
    <envar><name>ENSPROD</name><value>ensprod</value></envar>
    <envar><name>IMAGES_FN</name><value>rrfs_ensprod.yml</value></envar>

    <dependency>
      <metataskdep metatask='enspost'/>
    </dependency>
  </task>

{%- endif %}
{%- endif %}

</workflow>
