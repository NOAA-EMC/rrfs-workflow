#!/bin/bash -l

model=rrfs
%include <head.h>
%include <envir-p1.h>
module load prod_util
set -x
cyc=%CYC%
export cycle=t${cyc}z
case ${cyc} in
  00)
     g_cyc=00
     ;;
  06)
     g_cyc=06
     ;;
  12)
     g_cyc=12
     ;;
  18)
     g_cyc=18
     ;;
esac
s_cyc=$((cyc))
e_cyc=$((cyc+5))
retro=YES
suite_name=$(ecflow_client --query variable ${ECF_NAME}:SUITE)

#### set retro=NO for NCO code deliver
# Set PDY for this cycle
# Set job log directory for developer
if [ $retro == "YES" ]; then
  outputdir_ecf=%OUTPUTDIR%
  cd ${outputdir_ecf}/ecflocal
  setpdy.sh
  . ./PDY
  echo "Current retro PDY is $PDY"
  echo "Current retro cyc is $cyc"
  outputdir_ecf_today=${outputdir_ecf}/${PDYp1}${cyc}
  mkdir -p ${outputdir_ecf_today}
  for tmp_cyc in $(seq ${s_cyc} ${e_cyc}); do
    tmp_cyc2d=${tmp_cyc}
    [[ ${tmp_cyc} -le 9 ]]&& tmp_cyc2d="0${tmp_cyc}"
    outputdir_ecf_today=${outputdir_ecf}/${PDYp1}${tmp_cyc2d}
    ecflow_client --alter add variable PDY $PDYp1 /${suite_name}/primary/${g_cyc}/rrfs/v1.0/${tmp_cyc2d}
    ecflow_client --alter add variable OUTPUTDIR $outputdir_ecf_today /${suite_name}/primary/${g_cyc}/rrfs/v1.0/${tmp_cyc2d}
  done
  ecflow_client --alter add variable PDY $PDYp1 /${suite_name}/primary/${g_cyc}/rrfs/v1.0/cycle_end
fi

# Clean the umbrella data from previous run if exist
cd $DATAROOT
for tmp_cyc in $(seq ${s_cyc} ${e_cyc}); do
  tmp_cyc2d=${tmp_cyc}
  [[ ${tmp_cyc} -le 9 ]]&& tmp_cyc2d="0${tmp_cyc}"
  if [ ${KEEPDATA} == "YES" ]; then
    for dir_remove in rrfs_analysis_gsi rrfs_analysis_gsi_spinup rrfs_calc_ensmean rrfs_forecast rrfs_forecast_spinup rrfs_init rrfs_init_spinup; do
      [[ -d ${dir_remove}_${tmp_cyc2d}_v1.0 ]]&& mv ${dir_remove}_${tmp_cyc2d}_v1.0 ${dir_remove}_$$_${tmp_cyc2d}_v1.0
    done
  else
    for dir_remove in rrfs_analysis_gsi rrfs_analysis_gsi_spinup rrfs_calc_ensmean rrfs_forecast rrfs_forecast_spinup rrfs_init rrfs_init_spinup; do
      [[ -d ${dir_remove}_${tmp_cyc2d}_v1.0 ]]&& rm -rf ${dir_remove}_${tmp_cyc2d}_v1.0
    done
  fi
done
cd $DATA
####

# Requeue family
for rrfs_cyc_idx in $(seq ${s_cyc} ${e_cyc}); do
  idx_cyc2d=${rrfs_cyc_idx}
  [[ ${rrfs_cyc_idx} -le 9 ]]&& idx_cyc2d="0${rrfs_cyc_idx}"
  ecflow_client --requeue=force /${suite_name}/primary/${g_cyc}/rrfs/v1.0/${idx_cyc2d}
done

# Requeue cycle_end for the next 6 hours
if [ ${cyc} == "18" ]; then
  target_rrfs_cyc="0"
else
  target_rrfs_cyc=$((${cyc}+6))
fi
target_rrfs_cyc2d=${target_rrfs_cyc}
[[ ${target_rrfs_cyc} -le 9 ]]&& target_rrfs_cyc2d="0${target_rrfs_cyc}"
ecflow_client --requeue=force /${suite_name}/primary/${target_rrfs_cyc2d}/rrfs/v1.0/cycle_end

%include <tail.h>
exit 0
