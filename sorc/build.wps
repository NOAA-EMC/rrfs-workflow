#!/usr/bin/env bash
# shellcheck disable=SC1090,SC1091,SC2154
set -x
date
rundir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
HOMErrfs="$(dirname "$rundir")"

source "${HOMErrfs}/workflow/ush/detect_machine.sh"
source "${HOMErrfs}/workflow/ush/init.sh"

EXEC="${HOMErrfs}/sorc/WPS/ungrib/src/ungrib.exe"

if [[ "${MACHINE}" == "wcoss2" ]]; then
  BUILD_VERSION_FILE="${HOMErrfs}/versions/build.ver"
  if [[ -f "${BUILD_VERSION_FILE}" ]]; then
    source "${BUILD_VERSION_FILE}"
  fi
fi

set +x
module purge                      
module use "${HOMErrfs}/modulefiles"
module load "rrfs/${MACHINE}.intel"
module load netcdf
module list
set -x

echo "compiling WPS..."
cd "${HOMErrfs}/sorc/WPS" || exit 1
./clean
if [[ "${MACHINE}" == "wcoss2" ]]; then
  cp ../_workaround_/WPS/configure.wps_wcoss2 configure.wps
elif [[ "${MACHINE}" == "gaea" ]]; then
  mkdir -p .tmpNETCDFDIR/include
  mkdir -p .tmpNETCDFDIR/lib
  ln -snf "${netcdf_c_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_c_ROOT}"/lib/* .tmpNETCDFDIR/lib
  ln -snf "${netcdf_fortran_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_fortran_ROOT}"/lib/* .tmpNETCDFDIR/lib
  export NETCDF=${HOMErrfs}/sorc/WPS/.tmpNETCDFDIR
  echo "23" | ./configure --nowrf
elif [[ "${MACHINE}" == "ursa" ]]; then
  mkdir -p .tmpNETCDFDIR/include
  mkdir -p .tmpNETCDFDIR/lib
  ln -snf "${netcdf_c_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_c_ROOT}"/lib/* .tmpNETCDFDIR/lib
  ln -snf "${netcdf_fortran_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_fortran_ROOT}"/lib/* .tmpNETCDFDIR/lib
  export NETCDF=${HOMErrfs}/sorc/WPS/.tmpNETCDFDIR
  echo "19" | ./configure --nowrf
elif [[ "${MACHINE}" == "orion" || "${MACHINE}" == "hercules" ]]; then
  mkdir -p .tmpNETCDFDIR/include
  mkdir -p .tmpNETCDFDIR/lib
  ln -snf "${netcdf_c_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_c_ROOT}"/lib/* .tmpNETCDFDIR/lib
  ln -snf "${netcdf_fortran_ROOT}"/include/* .tmpNETCDFDIR/include
  ln -snf "${netcdf_fortran_ROOT}"/lib/* .tmpNETCDFDIR/lib
  module load jasper/2.0.32
  export NETCDF=${HOMErrfs}/sorc/WPS/.tmpNETCDFDIR
  echo "19" | ./configure --nowrf
else
  echo "19" | ./configure --nowrf
fi
./compile ungrib

if [[ "${MACHINE}" == "gaea" ]]; then
  cd ungrib/src || exit 1
  ifort -o ungrib.exe  misc_definitions_module.o debug_cio.o module_debug.o module_stringutil.o \
    table.o module_datarray.o gridinfo.o new_storage.o filelist.o ungrib.o output.o rrpr.o \
    rd_grib1.o file_delete.o datint.o rd_grib2.o ./ngl/w3/libw3.a ./ngl/g2/libg2_4.a \
    -ljasper -L"${libpng_ROOT}/lib64" -lpng -lz libpgu.a
elif [[ "${MACHINE}" == "orion" || "${MACHINE}" == "hercules" || "${MACHINE}" == "ursa" ]]; then
  cd ungrib/src || exit 1
  ifort -o ungrib.exe  misc_definitions_module.o debug_cio.o module_debug.o module_stringutil.o \
    table.o module_datarray.o gridinfo.o new_storage.o filelist.o ungrib.o output.o rrpr.o \
    rd_grib1.o file_delete.o datint.o rd_grib2.o ./ngl/w3/libw3.a ./ngl/g2/libg2_4.a \
    -L"${jasper_ROOT}/lib64" -ljasper -L"${libpng_ROOT}/lib64" -lpng -lz libpgu.a
fi

mkdir -p "${HOMErrfs}/exec"
echo "copy ${EXEC} to ../exec/ungrib.x"
cp "${EXEC}" "${HOMErrfs}/exec/ungrib.x"
exit 0
